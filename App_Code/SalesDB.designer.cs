#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SalesDB")]
public partial class SalesDBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCategory(Category instance);
  partial void UpdateCategory(Category instance);
  partial void DeleteCategory(Category instance);
  partial void InsertCustomer(Customer instance);
  partial void UpdateCustomer(Customer instance);
  partial void DeleteCustomer(Customer instance);
  partial void InsertJob(Job instance);
  partial void UpdateJob(Job instance);
  partial void DeleteJob(Job instance);
  partial void InsertPaymentsForSupplier(PaymentsForSupplier instance);
  partial void UpdatePaymentsForSupplier(PaymentsForSupplier instance);
  partial void DeletePaymentsForSupplier(PaymentsForSupplier instance);
  partial void InsertPurchasesInvoice(PurchasesInvoice instance);
  partial void UpdatePurchasesInvoice(PurchasesInvoice instance);
  partial void DeletePurchasesInvoice(PurchasesInvoice instance);
  partial void InsertPurchasesInvoicesDetail(PurchasesInvoicesDetail instance);
  partial void UpdatePurchasesInvoicesDetail(PurchasesInvoicesDetail instance);
  partial void DeletePurchasesInvoicesDetail(PurchasesInvoicesDetail instance);
  partial void InsertSalesInvoice(SalesInvoice instance);
  partial void UpdateSalesInvoice(SalesInvoice instance);
  partial void DeleteSalesInvoice(SalesInvoice instance);
  partial void InsertSalesInvoicesDetail(SalesInvoicesDetail instance);
  partial void UpdateSalesInvoicesDetail(SalesInvoicesDetail instance);
  partial void DeleteSalesInvoicesDetail(SalesInvoicesDetail instance);
  partial void InsertSupplier(Supplier instance);
  partial void UpdateSupplier(Supplier instance);
  partial void DeleteSupplier(Supplier instance);
  partial void InsertEmployee(Employee instance);
  partial void UpdateEmployee(Employee instance);
  partial void DeleteEmployee(Employee instance);
  partial void InsertSalesDiscardsMaster(SalesDiscardsMaster instance);
  partial void UpdateSalesDiscardsMaster(SalesDiscardsMaster instance);
  partial void DeleteSalesDiscardsMaster(SalesDiscardsMaster instance);
  partial void InsertSalesDiscardsDetail(SalesDiscardsDetail instance);
  partial void UpdateSalesDiscardsDetail(SalesDiscardsDetail instance);
  partial void DeleteSalesDiscardsDetail(SalesDiscardsDetail instance);
  partial void InsertUnitConversion(UnitConversion instance);
  partial void UpdateUnitConversion(UnitConversion instance);
  partial void DeleteUnitConversion(UnitConversion instance);
  partial void InsertUnit(Unit instance);
  partial void UpdateUnit(Unit instance);
  partial void DeleteUnit(Unit instance);
  partial void InsertProduct(Product instance);
  partial void UpdateProduct(Product instance);
  partial void DeleteProduct(Product instance);
  partial void InsertPurchasesDetail(PurchasesDetail instance);
  partial void UpdatePurchasesDetail(PurchasesDetail instance);
  partial void DeletePurchasesDetail(PurchasesDetail instance);
  partial void InsertPurchasesMaster(PurchasesMaster instance);
  partial void UpdatePurchasesMaster(PurchasesMaster instance);
  partial void DeletePurchasesMaster(PurchasesMaster instance);
  partial void InsertSalesDetail(SalesDetail instance);
  partial void UpdateSalesDetail(SalesDetail instance);
  partial void DeleteSalesDetail(SalesDetail instance);
  partial void InsertSalesMaster(SalesMaster instance);
  partial void UpdateSalesMaster(SalesMaster instance);
  partial void DeleteSalesMaster(SalesMaster instance);
  partial void InsertCustomersPayment(CustomersPayment instance);
  partial void UpdateCustomersPayment(CustomersPayment instance);
  partial void DeleteCustomersPayment(CustomersPayment instance);
  partial void InsertPurchaseDiscardsMaster(PurchaseDiscardsMaster instance);
  partial void UpdatePurchaseDiscardsMaster(PurchaseDiscardsMaster instance);
  partial void DeletePurchaseDiscardsMaster(PurchaseDiscardsMaster instance);
  partial void InsertPurchaseDiscardsDetail(PurchaseDiscardsDetail instance);
  partial void UpdatePurchaseDiscardsDetail(PurchaseDiscardsDetail instance);
  partial void DeletePurchaseDiscardsDetail(PurchaseDiscardsDetail instance);
  #endregion
	
	public SalesDBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SalesDBConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public SalesDBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public SalesDBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public SalesDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public SalesDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Category> Categories
	{
		get
		{
			return this.GetTable<Category>();
		}
	}
	
	public System.Data.Linq.Table<Customer> Customers
	{
		get
		{
			return this.GetTable<Customer>();
		}
	}
	
	public System.Data.Linq.Table<Job> Jobs
	{
		get
		{
			return this.GetTable<Job>();
		}
	}
	
	public System.Data.Linq.Table<PaymentsForSupplier> PaymentsForSuppliers
	{
		get
		{
			return this.GetTable<PaymentsForSupplier>();
		}
	}
	
	public System.Data.Linq.Table<PurchasesInvoice> PurchasesInvoices
	{
		get
		{
			return this.GetTable<PurchasesInvoice>();
		}
	}
	
	public System.Data.Linq.Table<PurchasesInvoicesDetail> PurchasesInvoicesDetails
	{
		get
		{
			return this.GetTable<PurchasesInvoicesDetail>();
		}
	}
	
	public System.Data.Linq.Table<SalesInvoice> SalesInvoices
	{
		get
		{
			return this.GetTable<SalesInvoice>();
		}
	}
	
	public System.Data.Linq.Table<SalesInvoicesDetail> SalesInvoicesDetails
	{
		get
		{
			return this.GetTable<SalesInvoicesDetail>();
		}
	}
	
	public System.Data.Linq.Table<Supplier> Suppliers
	{
		get
		{
			return this.GetTable<Supplier>();
		}
	}
	
	public System.Data.Linq.Table<Employee> Employees
	{
		get
		{
			return this.GetTable<Employee>();
		}
	}
	
	public System.Data.Linq.Table<SalesDiscardsMaster> SalesDiscardsMasters
	{
		get
		{
			return this.GetTable<SalesDiscardsMaster>();
		}
	}
	
	public System.Data.Linq.Table<SalesDiscardsDetail> SalesDiscardsDetails
	{
		get
		{
			return this.GetTable<SalesDiscardsDetail>();
		}
	}
	
	public System.Data.Linq.Table<UnitConversion> UnitConversions
	{
		get
		{
			return this.GetTable<UnitConversion>();
		}
	}
	
	public System.Data.Linq.Table<Unit> Units
	{
		get
		{
			return this.GetTable<Unit>();
		}
	}
	
	public System.Data.Linq.Table<Product> Products
	{
		get
		{
			return this.GetTable<Product>();
		}
	}
	
	public System.Data.Linq.Table<PurchasesDetail> PurchasesDetails
	{
		get
		{
			return this.GetTable<PurchasesDetail>();
		}
	}
	
	public System.Data.Linq.Table<PurchasesMaster> PurchasesMasters
	{
		get
		{
			return this.GetTable<PurchasesMaster>();
		}
	}
	
	public System.Data.Linq.Table<SalesDetail> SalesDetails
	{
		get
		{
			return this.GetTable<SalesDetail>();
		}
	}
	
	public System.Data.Linq.Table<SalesMaster> SalesMasters
	{
		get
		{
			return this.GetTable<SalesMaster>();
		}
	}
	
	public System.Data.Linq.Table<CustomersPayment> CustomersPayments
	{
		get
		{
			return this.GetTable<CustomersPayment>();
		}
	}
	
	public System.Data.Linq.Table<PurchaseDiscardsMaster> PurchaseDiscardsMasters
	{
		get
		{
			return this.GetTable<PurchaseDiscardsMaster>();
		}
	}
	
	public System.Data.Linq.Table<PurchaseDiscardsDetail> PurchaseDiscardsDetails
	{
		get
		{
			return this.GetTable<PurchaseDiscardsDetail>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCategories")]
	public ISingleResult<spCategoriesResult> spCategories()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spCategoriesResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spEmployees")]
	public ISingleResult<spEmployeesResult> spEmployees()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spEmployeesResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCustomersPayments")]
	public ISingleResult<spCustomersPaymentsResult> spCustomersPayments()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spCustomersPaymentsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spPaymentsForSuppliers")]
	public ISingleResult<spPaymentsForSuppliersResult> spPaymentsForSuppliers()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spPaymentsForSuppliersResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spPurchasesMaster")]
	public ISingleResult<spPurchasesMasterResult> spPurchasesMaster()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spPurchasesMasterResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spPurchasesDetails")]
	public ISingleResult<spPurchasesDetailsResult> spPurchasesDetails()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spPurchasesDetailsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSalesDetails")]
	public ISingleResult<spSalesDetailsResult> spSalesDetails()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spSalesDetailsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spPurchaseDiscardsDetails")]
	public ISingleResult<spPurchaseDiscardsDetailsResult> spPurchaseDiscardsDetails()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spPurchaseDiscardsDetailsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSalesDiscardsDetails")]
	public ISingleResult<spSalesDiscardsDetailsResult> spSalesDiscardsDetails()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spSalesDiscardsDetailsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSalesDiscardsMaster")]
	public ISingleResult<spSalesDiscardsMasterResult> spSalesDiscardsMaster()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spSalesDiscardsMasterResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spProducts")]
	public ISingleResult<spProductsResult> spProducts()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spProductsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSalesMaster")]
	public ISingleResult<spSalesMasterResult> spSalesMaster()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spSalesMasterResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spPurchaseDiscardsMaster")]
	public ISingleResult<spPurchaseDiscardsMasterResult> spPurchaseDiscardsMaster()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<spPurchaseDiscardsMasterResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CategoryID;
	
	private string _CategoryName;
	
	private System.Nullable<int> _ParentCategoryID;
	
	private EntitySet<Category> _Categories;
	
	private EntitySet<Product> _Products;
	
	private EntityRef<Category> _Category1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnParentCategoryIDChanging(System.Nullable<int> value);
    partial void OnParentCategoryIDChanged();
    #endregion
	
	public Category()
	{
		this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		this._Category1 = default(EntityRef<Category>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				this.OnCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._CategoryID = value;
				this.SendPropertyChanged("CategoryID");
				this.OnCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string CategoryName
	{
		get
		{
			return this._CategoryName;
		}
		set
		{
			if ((this._CategoryName != value))
			{
				this.OnCategoryNameChanging(value);
				this.SendPropertyChanging();
				this._CategoryName = value;
				this.SendPropertyChanged("CategoryName");
				this.OnCategoryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCategoryID", DbType="Int")]
	public System.Nullable<int> ParentCategoryID
	{
		get
		{
			return this._ParentCategoryID;
		}
		set
		{
			if ((this._ParentCategoryID != value))
			{
				if (this._Category1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnParentCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ParentCategoryID = value;
				this.SendPropertyChanged("ParentCategoryID");
				this.OnParentCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Categories", ThisKey="CategoryID", OtherKey="ParentCategoryID")]
	public EntitySet<Category> Categories
	{
		get
		{
			return this._Categories;
		}
		set
		{
			this._Categories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="CategoryID", OtherKey="CategoryID")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Category1", ThisKey="ParentCategoryID", OtherKey="CategoryID", IsForeignKey=true)]
	public Category Category1
	{
		get
		{
			return this._Category1.Entity;
		}
		set
		{
			Category previousValue = this._Category1.Entity;
			if (((previousValue != value) 
						|| (this._Category1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Category1.Entity = null;
					previousValue.Categories.Remove(this);
				}
				this._Category1.Entity = value;
				if ((value != null))
				{
					value.Categories.Add(this);
					this._ParentCategoryID = value.CategoryID;
				}
				else
				{
					this._ParentCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Category1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Categories(Category entity)
	{
		this.SendPropertyChanging();
		entity.Category1 = this;
	}
	
	private void detach_Categories(Category entity)
	{
		this.SendPropertyChanging();
		entity.Category1 = null;
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Category = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Category = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CustomerID;
	
	private string _CustomerName;
	
	private string _Address;
	
	private string _Telphone;
	
	private string _Mobile;
	
	private string _Fax;
	
	private double _StartBalance;
	
	private double _Balance;
	
	private EntitySet<SalesInvoice> _SalesInvoices;
	
	private EntitySet<SalesMaster> _SalesMasters;
	
	private EntitySet<CustomersPayment> _CustomersPayments;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelphoneChanging(string value);
    partial void OnTelphoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnStartBalanceChanging(double value);
    partial void OnStartBalanceChanged();
    partial void OnBalanceChanging(double value);
    partial void OnBalanceChanged();
    #endregion
	
	public Customer()
	{
		this._SalesInvoices = new EntitySet<SalesInvoice>(new Action<SalesInvoice>(this.attach_SalesInvoices), new Action<SalesInvoice>(this.detach_SalesInvoices));
		this._SalesMasters = new EntitySet<SalesMaster>(new Action<SalesMaster>(this.attach_SalesMasters), new Action<SalesMaster>(this.detach_SalesMasters));
		this._CustomersPayments = new EntitySet<CustomersPayment>(new Action<CustomersPayment>(this.attach_CustomersPayments), new Action<CustomersPayment>(this.detach_CustomersPayments));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this.OnCustomerNameChanging(value);
				this.SendPropertyChanging();
				this._CustomerName = value;
				this.SendPropertyChanged("CustomerName");
				this.OnCustomerNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telphone", DbType="NVarChar(50)")]
	public string Telphone
	{
		get
		{
			return this._Telphone;
		}
		set
		{
			if ((this._Telphone != value))
			{
				this.OnTelphoneChanging(value);
				this.SendPropertyChanging();
				this._Telphone = value;
				this.SendPropertyChanged("Telphone");
				this.OnTelphoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartBalance", DbType="Float NOT NULL")]
	public double StartBalance
	{
		get
		{
			return this._StartBalance;
		}
		set
		{
			if ((this._StartBalance != value))
			{
				this.OnStartBalanceChanging(value);
				this.SendPropertyChanging();
				this._StartBalance = value;
				this.SendPropertyChanged("StartBalance");
				this.OnStartBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Float NOT NULL")]
	public double Balance
	{
		get
		{
			return this._Balance;
		}
		set
		{
			if ((this._Balance != value))
			{
				this.OnBalanceChanging(value);
				this.SendPropertyChanging();
				this._Balance = value;
				this.SendPropertyChanged("Balance");
				this.OnBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesInvoice", Storage="_SalesInvoices", ThisKey="CustomerID", OtherKey="CustomerID")]
	public EntitySet<SalesInvoice> SalesInvoices
	{
		get
		{
			return this._SalesInvoices;
		}
		set
		{
			this._SalesInvoices.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesMaster", Storage="_SalesMasters", ThisKey="CustomerID", OtherKey="CustomerID")]
	public EntitySet<SalesMaster> SalesMasters
	{
		get
		{
			return this._SalesMasters;
		}
		set
		{
			this._SalesMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomersPayment", Storage="_CustomersPayments", ThisKey="CustomerID", OtherKey="CustomerID")]
	public EntitySet<CustomersPayment> CustomersPayments
	{
		get
		{
			return this._CustomersPayments;
		}
		set
		{
			this._CustomersPayments.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SalesInvoices(SalesInvoice entity)
	{
		this.SendPropertyChanging();
		entity.Customer = this;
	}
	
	private void detach_SalesInvoices(SalesInvoice entity)
	{
		this.SendPropertyChanging();
		entity.Customer = null;
	}
	
	private void attach_SalesMasters(SalesMaster entity)
	{
		this.SendPropertyChanging();
		entity.Customer = this;
	}
	
	private void detach_SalesMasters(SalesMaster entity)
	{
		this.SendPropertyChanging();
		entity.Customer = null;
	}
	
	private void attach_CustomersPayments(CustomersPayment entity)
	{
		this.SendPropertyChanging();
		entity.Customer = this;
	}
	
	private void detach_CustomersPayments(CustomersPayment entity)
	{
		this.SendPropertyChanging();
		entity.Customer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jobs")]
public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _JobID;
	
	private string _JobName;
	
	private EntitySet<Employee> _Employees;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnJobNameChanging(string value);
    partial void OnJobNameChanged();
    #endregion
	
	public Job()
	{
		this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int JobID
	{
		get
		{
			return this._JobID;
		}
		set
		{
			if ((this._JobID != value))
			{
				this.OnJobIDChanging(value);
				this.SendPropertyChanging();
				this._JobID = value;
				this.SendPropertyChanged("JobID");
				this.OnJobIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string JobName
	{
		get
		{
			return this._JobName;
		}
		set
		{
			if ((this._JobName != value))
			{
				this.OnJobNameChanging(value);
				this.SendPropertyChanging();
				this._JobName = value;
				this.SendPropertyChanged("JobName");
				this.OnJobNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Employee", Storage="_Employees", ThisKey="JobID", OtherKey="JobID")]
	public EntitySet<Employee> Employees
	{
		get
		{
			return this._Employees;
		}
		set
		{
			this._Employees.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Employees(Employee entity)
	{
		this.SendPropertyChanging();
		entity.Job = this;
	}
	
	private void detach_Employees(Employee entity)
	{
		this.SendPropertyChanging();
		entity.Job = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentsForSuppliers")]
public partial class PaymentsForSupplier : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SupplierPaymentID;
	
	private int _SupplierID;
	
	private System.DateTime _PaymentDateM;
	
	private string _PaymentDateH;
	
	private double _Payment;
	
	private EntitySet<PurchasesMaster> _PurchasesMasters;
	
	private EntityRef<Supplier> _Supplier;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierPaymentIDChanging(int value);
    partial void OnSupplierPaymentIDChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnPaymentDateMChanging(System.DateTime value);
    partial void OnPaymentDateMChanged();
    partial void OnPaymentDateHChanging(string value);
    partial void OnPaymentDateHChanged();
    partial void OnPaymentChanging(double value);
    partial void OnPaymentChanged();
    #endregion
	
	public PaymentsForSupplier()
	{
		this._PurchasesMasters = new EntitySet<PurchasesMaster>(new Action<PurchasesMaster>(this.attach_PurchasesMasters), new Action<PurchasesMaster>(this.detach_PurchasesMasters));
		this._Supplier = default(EntityRef<Supplier>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPaymentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SupplierPaymentID
	{
		get
		{
			return this._SupplierPaymentID;
		}
		set
		{
			if ((this._SupplierPaymentID != value))
			{
				this.OnSupplierPaymentIDChanging(value);
				this.SendPropertyChanging();
				this._SupplierPaymentID = value;
				this.SendPropertyChanged("SupplierPaymentID");
				this.OnSupplierPaymentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
	public int SupplierID
	{
		get
		{
			return this._SupplierID;
		}
		set
		{
			if ((this._SupplierID != value))
			{
				if (this._Supplier.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSupplierIDChanging(value);
				this.SendPropertyChanging();
				this._SupplierID = value;
				this.SendPropertyChanged("SupplierID");
				this.OnSupplierIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDateM", DbType="DateTime NOT NULL")]
	public System.DateTime PaymentDateM
	{
		get
		{
			return this._PaymentDateM;
		}
		set
		{
			if ((this._PaymentDateM != value))
			{
				this.OnPaymentDateMChanging(value);
				this.SendPropertyChanging();
				this._PaymentDateM = value;
				this.SendPropertyChanged("PaymentDateM");
				this.OnPaymentDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string PaymentDateH
	{
		get
		{
			return this._PaymentDateH;
		}
		set
		{
			if ((this._PaymentDateH != value))
			{
				this.OnPaymentDateHChanging(value);
				this.SendPropertyChanging();
				this._PaymentDateH = value;
				this.SendPropertyChanged("PaymentDateH");
				this.OnPaymentDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Float NOT NULL")]
	public double Payment
	{
		get
		{
			return this._Payment;
		}
		set
		{
			if ((this._Payment != value))
			{
				this.OnPaymentChanging(value);
				this.SendPropertyChanging();
				this._Payment = value;
				this.SendPropertyChanged("Payment");
				this.OnPaymentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentsForSupplier_PurchasesMaster", Storage="_PurchasesMasters", ThisKey="SupplierPaymentID", OtherKey="SupplierPaymentID")]
	public EntitySet<PurchasesMaster> PurchasesMasters
	{
		get
		{
			return this._PurchasesMasters;
		}
		set
		{
			this._PurchasesMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PaymentsForSupplier", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
	public Supplier Supplier
	{
		get
		{
			return this._Supplier.Entity;
		}
		set
		{
			Supplier previousValue = this._Supplier.Entity;
			if (((previousValue != value) 
						|| (this._Supplier.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Supplier.Entity = null;
					previousValue.PaymentsForSuppliers.Remove(this);
				}
				this._Supplier.Entity = value;
				if ((value != null))
				{
					value.PaymentsForSuppliers.Add(this);
					this._SupplierID = value.SupplierID;
				}
				else
				{
					this._SupplierID = default(int);
				}
				this.SendPropertyChanged("Supplier");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PurchasesMasters(PurchasesMaster entity)
	{
		this.SendPropertyChanging();
		entity.PaymentsForSupplier = this;
	}
	
	private void detach_PurchasesMasters(PurchasesMaster entity)
	{
		this.SendPropertyChanging();
		entity.PaymentsForSupplier = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchasesInvoices")]
public partial class PurchasesInvoice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PurchaseInvoiceID;
	
	private System.DateTime _PurchaseInvoiceDateM;
	
	private string _PurchaseInvoiceDateH;
	
	private int _SupplierID;
	
	private System.DateTime _FromDateM;
	
	private string _FromDateH;
	
	private System.DateTime _ToDateM;
	
	private string _ToDateH;
	
	private bool _Status;
	
	private EntitySet<PurchasesInvoicesDetail> _PurchasesInvoicesDetails;
	
	private EntityRef<Supplier> _Supplier;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseInvoiceIDChanging(int value);
    partial void OnPurchaseInvoiceIDChanged();
    partial void OnPurchaseInvoiceDateMChanging(System.DateTime value);
    partial void OnPurchaseInvoiceDateMChanged();
    partial void OnPurchaseInvoiceDateHChanging(string value);
    partial void OnPurchaseInvoiceDateHChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnFromDateMChanging(System.DateTime value);
    partial void OnFromDateMChanged();
    partial void OnFromDateHChanging(string value);
    partial void OnFromDateHChanged();
    partial void OnToDateMChanging(System.DateTime value);
    partial void OnToDateMChanged();
    partial void OnToDateHChanging(string value);
    partial void OnToDateHChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
	
	public PurchasesInvoice()
	{
		this._PurchasesInvoicesDetails = new EntitySet<PurchasesInvoicesDetail>(new Action<PurchasesInvoicesDetail>(this.attach_PurchasesInvoicesDetails), new Action<PurchasesInvoicesDetail>(this.detach_PurchasesInvoicesDetails));
		this._Supplier = default(EntityRef<Supplier>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseInvoiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PurchaseInvoiceID
	{
		get
		{
			return this._PurchaseInvoiceID;
		}
		set
		{
			if ((this._PurchaseInvoiceID != value))
			{
				this.OnPurchaseInvoiceIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseInvoiceID = value;
				this.SendPropertyChanged("PurchaseInvoiceID");
				this.OnPurchaseInvoiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseInvoiceDateM", DbType="DateTime NOT NULL")]
	public System.DateTime PurchaseInvoiceDateM
	{
		get
		{
			return this._PurchaseInvoiceDateM;
		}
		set
		{
			if ((this._PurchaseInvoiceDateM != value))
			{
				this.OnPurchaseInvoiceDateMChanging(value);
				this.SendPropertyChanging();
				this._PurchaseInvoiceDateM = value;
				this.SendPropertyChanged("PurchaseInvoiceDateM");
				this.OnPurchaseInvoiceDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseInvoiceDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string PurchaseInvoiceDateH
	{
		get
		{
			return this._PurchaseInvoiceDateH;
		}
		set
		{
			if ((this._PurchaseInvoiceDateH != value))
			{
				this.OnPurchaseInvoiceDateHChanging(value);
				this.SendPropertyChanging();
				this._PurchaseInvoiceDateH = value;
				this.SendPropertyChanged("PurchaseInvoiceDateH");
				this.OnPurchaseInvoiceDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
	public int SupplierID
	{
		get
		{
			return this._SupplierID;
		}
		set
		{
			if ((this._SupplierID != value))
			{
				if (this._Supplier.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSupplierIDChanging(value);
				this.SendPropertyChanging();
				this._SupplierID = value;
				this.SendPropertyChanged("SupplierID");
				this.OnSupplierIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDateM", DbType="DateTime NOT NULL")]
	public System.DateTime FromDateM
	{
		get
		{
			return this._FromDateM;
		}
		set
		{
			if ((this._FromDateM != value))
			{
				this.OnFromDateMChanging(value);
				this.SendPropertyChanging();
				this._FromDateM = value;
				this.SendPropertyChanged("FromDateM");
				this.OnFromDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string FromDateH
	{
		get
		{
			return this._FromDateH;
		}
		set
		{
			if ((this._FromDateH != value))
			{
				this.OnFromDateHChanging(value);
				this.SendPropertyChanging();
				this._FromDateH = value;
				this.SendPropertyChanged("FromDateH");
				this.OnFromDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDateM", DbType="DateTime NOT NULL")]
	public System.DateTime ToDateM
	{
		get
		{
			return this._ToDateM;
		}
		set
		{
			if ((this._ToDateM != value))
			{
				this.OnToDateMChanging(value);
				this.SendPropertyChanging();
				this._ToDateM = value;
				this.SendPropertyChanged("ToDateM");
				this.OnToDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string ToDateH
	{
		get
		{
			return this._ToDateH;
		}
		set
		{
			if ((this._ToDateH != value))
			{
				this.OnToDateHChanging(value);
				this.SendPropertyChanging();
				this._ToDateH = value;
				this.SendPropertyChanged("ToDateH");
				this.OnToDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
	public bool Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchasesInvoice_PurchasesInvoicesDetail", Storage="_PurchasesInvoicesDetails", ThisKey="PurchaseInvoiceID", OtherKey="PurchaseInvoiceID")]
	public EntitySet<PurchasesInvoicesDetail> PurchasesInvoicesDetails
	{
		get
		{
			return this._PurchasesInvoicesDetails;
		}
		set
		{
			this._PurchasesInvoicesDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PurchasesInvoice", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
	public Supplier Supplier
	{
		get
		{
			return this._Supplier.Entity;
		}
		set
		{
			Supplier previousValue = this._Supplier.Entity;
			if (((previousValue != value) 
						|| (this._Supplier.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Supplier.Entity = null;
					previousValue.PurchasesInvoices.Remove(this);
				}
				this._Supplier.Entity = value;
				if ((value != null))
				{
					value.PurchasesInvoices.Add(this);
					this._SupplierID = value.SupplierID;
				}
				else
				{
					this._SupplierID = default(int);
				}
				this.SendPropertyChanged("Supplier");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PurchasesInvoicesDetails(PurchasesInvoicesDetail entity)
	{
		this.SendPropertyChanging();
		entity.PurchasesInvoice = this;
	}
	
	private void detach_PurchasesInvoicesDetails(PurchasesInvoicesDetail entity)
	{
		this.SendPropertyChanging();
		entity.PurchasesInvoice = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchasesInvoicesDetails")]
public partial class PurchasesInvoicesDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PurchaseInvoiceDetailID;
	
	private int _PurchaseInvoiceID;
	
	private System.DateTime _DateM;
	
	private string _DateH;
	
	private int _TransactionNO;
	
	private string _Type;
	
	private double _Debit;
	
	private double _Credit;
	
	private EntityRef<PurchasesInvoice> _PurchasesInvoice;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseInvoiceDetailIDChanging(int value);
    partial void OnPurchaseInvoiceDetailIDChanged();
    partial void OnPurchaseInvoiceIDChanging(int value);
    partial void OnPurchaseInvoiceIDChanged();
    partial void OnDateMChanging(System.DateTime value);
    partial void OnDateMChanged();
    partial void OnDateHChanging(string value);
    partial void OnDateHChanged();
    partial void OnTransactionNOChanging(int value);
    partial void OnTransactionNOChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDebitChanging(double value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(double value);
    partial void OnCreditChanged();
    #endregion
	
	public PurchasesInvoicesDetail()
	{
		this._PurchasesInvoice = default(EntityRef<PurchasesInvoice>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseInvoiceDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PurchaseInvoiceDetailID
	{
		get
		{
			return this._PurchaseInvoiceDetailID;
		}
		set
		{
			if ((this._PurchaseInvoiceDetailID != value))
			{
				this.OnPurchaseInvoiceDetailIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseInvoiceDetailID = value;
				this.SendPropertyChanged("PurchaseInvoiceDetailID");
				this.OnPurchaseInvoiceDetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseInvoiceID", DbType="Int NOT NULL")]
	public int PurchaseInvoiceID
	{
		get
		{
			return this._PurchaseInvoiceID;
		}
		set
		{
			if ((this._PurchaseInvoiceID != value))
			{
				if (this._PurchasesInvoice.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPurchaseInvoiceIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseInvoiceID = value;
				this.SendPropertyChanged("PurchaseInvoiceID");
				this.OnPurchaseInvoiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateM", DbType="DateTime NOT NULL")]
	public System.DateTime DateM
	{
		get
		{
			return this._DateM;
		}
		set
		{
			if ((this._DateM != value))
			{
				this.OnDateMChanging(value);
				this.SendPropertyChanging();
				this._DateM = value;
				this.SendPropertyChanged("DateM");
				this.OnDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string DateH
	{
		get
		{
			return this._DateH;
		}
		set
		{
			if ((this._DateH != value))
			{
				this.OnDateHChanging(value);
				this.SendPropertyChanging();
				this._DateH = value;
				this.SendPropertyChanged("DateH");
				this.OnDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNO", DbType="Int NOT NULL")]
	public int TransactionNO
	{
		get
		{
			return this._TransactionNO;
		}
		set
		{
			if ((this._TransactionNO != value))
			{
				this.OnTransactionNOChanging(value);
				this.SendPropertyChanging();
				this._TransactionNO = value;
				this.SendPropertyChanged("TransactionNO");
				this.OnTransactionNOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Float NOT NULL")]
	public double Debit
	{
		get
		{
			return this._Debit;
		}
		set
		{
			if ((this._Debit != value))
			{
				this.OnDebitChanging(value);
				this.SendPropertyChanging();
				this._Debit = value;
				this.SendPropertyChanged("Debit");
				this.OnDebitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Float NOT NULL")]
	public double Credit
	{
		get
		{
			return this._Credit;
		}
		set
		{
			if ((this._Credit != value))
			{
				this.OnCreditChanging(value);
				this.SendPropertyChanging();
				this._Credit = value;
				this.SendPropertyChanged("Credit");
				this.OnCreditChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchasesInvoice_PurchasesInvoicesDetail", Storage="_PurchasesInvoice", ThisKey="PurchaseInvoiceID", OtherKey="PurchaseInvoiceID", IsForeignKey=true)]
	public PurchasesInvoice PurchasesInvoice
	{
		get
		{
			return this._PurchasesInvoice.Entity;
		}
		set
		{
			PurchasesInvoice previousValue = this._PurchasesInvoice.Entity;
			if (((previousValue != value) 
						|| (this._PurchasesInvoice.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PurchasesInvoice.Entity = null;
					previousValue.PurchasesInvoicesDetails.Remove(this);
				}
				this._PurchasesInvoice.Entity = value;
				if ((value != null))
				{
					value.PurchasesInvoicesDetails.Add(this);
					this._PurchaseInvoiceID = value.PurchaseInvoiceID;
				}
				else
				{
					this._PurchaseInvoiceID = default(int);
				}
				this.SendPropertyChanged("PurchasesInvoice");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesInvoices")]
public partial class SalesInvoice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesInvoiceID;
	
	private System.DateTime _SalesInvoiceDateM;
	
	private string _SalesInvoiceDateH;
	
	private int _CustomerID;
	
	private System.DateTime _FromDateM;
	
	private string _FromDateH;
	
	private System.DateTime _ToDateM;
	
	private string _ToDateH;
	
	private bool _Status;
	
	private EntitySet<SalesInvoicesDetail> _SalesInvoicesDetails;
	
	private EntityRef<Customer> _Customer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesInvoiceIDChanging(int value);
    partial void OnSalesInvoiceIDChanged();
    partial void OnSalesInvoiceDateMChanging(System.DateTime value);
    partial void OnSalesInvoiceDateMChanged();
    partial void OnSalesInvoiceDateHChanging(string value);
    partial void OnSalesInvoiceDateHChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnFromDateMChanging(System.DateTime value);
    partial void OnFromDateMChanged();
    partial void OnFromDateHChanging(string value);
    partial void OnFromDateHChanged();
    partial void OnToDateMChanging(System.DateTime value);
    partial void OnToDateMChanged();
    partial void OnToDateHChanging(string value);
    partial void OnToDateHChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
	
	public SalesInvoice()
	{
		this._SalesInvoicesDetails = new EntitySet<SalesInvoicesDetail>(new Action<SalesInvoicesDetail>(this.attach_SalesInvoicesDetails), new Action<SalesInvoicesDetail>(this.detach_SalesInvoicesDetails));
		this._Customer = default(EntityRef<Customer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesInvoiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SalesInvoiceID
	{
		get
		{
			return this._SalesInvoiceID;
		}
		set
		{
			if ((this._SalesInvoiceID != value))
			{
				this.OnSalesInvoiceIDChanging(value);
				this.SendPropertyChanging();
				this._SalesInvoiceID = value;
				this.SendPropertyChanged("SalesInvoiceID");
				this.OnSalesInvoiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesInvoiceDateM", DbType="DateTime NOT NULL")]
	public System.DateTime SalesInvoiceDateM
	{
		get
		{
			return this._SalesInvoiceDateM;
		}
		set
		{
			if ((this._SalesInvoiceDateM != value))
			{
				this.OnSalesInvoiceDateMChanging(value);
				this.SendPropertyChanging();
				this._SalesInvoiceDateM = value;
				this.SendPropertyChanged("SalesInvoiceDateM");
				this.OnSalesInvoiceDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesInvoiceDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SalesInvoiceDateH
	{
		get
		{
			return this._SalesInvoiceDateH;
		}
		set
		{
			if ((this._SalesInvoiceDateH != value))
			{
				this.OnSalesInvoiceDateHChanging(value);
				this.SendPropertyChanging();
				this._SalesInvoiceDateH = value;
				this.SendPropertyChanged("SalesInvoiceDateH");
				this.OnSalesInvoiceDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDateM", DbType="DateTime NOT NULL")]
	public System.DateTime FromDateM
	{
		get
		{
			return this._FromDateM;
		}
		set
		{
			if ((this._FromDateM != value))
			{
				this.OnFromDateMChanging(value);
				this.SendPropertyChanging();
				this._FromDateM = value;
				this.SendPropertyChanged("FromDateM");
				this.OnFromDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string FromDateH
	{
		get
		{
			return this._FromDateH;
		}
		set
		{
			if ((this._FromDateH != value))
			{
				this.OnFromDateHChanging(value);
				this.SendPropertyChanging();
				this._FromDateH = value;
				this.SendPropertyChanged("FromDateH");
				this.OnFromDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDateM", DbType="DateTime NOT NULL")]
	public System.DateTime ToDateM
	{
		get
		{
			return this._ToDateM;
		}
		set
		{
			if ((this._ToDateM != value))
			{
				this.OnToDateMChanging(value);
				this.SendPropertyChanging();
				this._ToDateM = value;
				this.SendPropertyChanged("ToDateM");
				this.OnToDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string ToDateH
	{
		get
		{
			return this._ToDateH;
		}
		set
		{
			if ((this._ToDateH != value))
			{
				this.OnToDateHChanging(value);
				this.SendPropertyChanging();
				this._ToDateH = value;
				this.SendPropertyChanged("ToDateH");
				this.OnToDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
	public bool Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesInvoice_SalesInvoicesDetail", Storage="_SalesInvoicesDetails", ThisKey="SalesInvoiceID", OtherKey="SalesInvoiceID")]
	public EntitySet<SalesInvoicesDetail> SalesInvoicesDetails
	{
		get
		{
			return this._SalesInvoicesDetails;
		}
		set
		{
			this._SalesInvoicesDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesInvoice", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
	public Customer Customer
	{
		get
		{
			return this._Customer.Entity;
		}
		set
		{
			Customer previousValue = this._Customer.Entity;
			if (((previousValue != value) 
						|| (this._Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Customer.Entity = null;
					previousValue.SalesInvoices.Remove(this);
				}
				this._Customer.Entity = value;
				if ((value != null))
				{
					value.SalesInvoices.Add(this);
					this._CustomerID = value.CustomerID;
				}
				else
				{
					this._CustomerID = default(int);
				}
				this.SendPropertyChanged("Customer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SalesInvoicesDetails(SalesInvoicesDetail entity)
	{
		this.SendPropertyChanging();
		entity.SalesInvoice = this;
	}
	
	private void detach_SalesInvoicesDetails(SalesInvoicesDetail entity)
	{
		this.SendPropertyChanging();
		entity.SalesInvoice = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesInvoicesDetails")]
public partial class SalesInvoicesDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesInvoiceDetailID;
	
	private int _SalesInvoiceID;
	
	private System.DateTime _DateM;
	
	private string _DateH;
	
	private int _TransactionNO;
	
	private string _Type;
	
	private double _Debit;
	
	private double _Credit;
	
	private EntityRef<SalesInvoice> _SalesInvoice;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesInvoiceDetailIDChanging(int value);
    partial void OnSalesInvoiceDetailIDChanged();
    partial void OnSalesInvoiceIDChanging(int value);
    partial void OnSalesInvoiceIDChanged();
    partial void OnDateMChanging(System.DateTime value);
    partial void OnDateMChanged();
    partial void OnDateHChanging(string value);
    partial void OnDateHChanged();
    partial void OnTransactionNOChanging(int value);
    partial void OnTransactionNOChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDebitChanging(double value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(double value);
    partial void OnCreditChanged();
    #endregion
	
	public SalesInvoicesDetail()
	{
		this._SalesInvoice = default(EntityRef<SalesInvoice>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesInvoiceDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SalesInvoiceDetailID
	{
		get
		{
			return this._SalesInvoiceDetailID;
		}
		set
		{
			if ((this._SalesInvoiceDetailID != value))
			{
				this.OnSalesInvoiceDetailIDChanging(value);
				this.SendPropertyChanging();
				this._SalesInvoiceDetailID = value;
				this.SendPropertyChanged("SalesInvoiceDetailID");
				this.OnSalesInvoiceDetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesInvoiceID", DbType="Int NOT NULL")]
	public int SalesInvoiceID
	{
		get
		{
			return this._SalesInvoiceID;
		}
		set
		{
			if ((this._SalesInvoiceID != value))
			{
				if (this._SalesInvoice.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesInvoiceIDChanging(value);
				this.SendPropertyChanging();
				this._SalesInvoiceID = value;
				this.SendPropertyChanged("SalesInvoiceID");
				this.OnSalesInvoiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateM", DbType="DateTime NOT NULL")]
	public System.DateTime DateM
	{
		get
		{
			return this._DateM;
		}
		set
		{
			if ((this._DateM != value))
			{
				this.OnDateMChanging(value);
				this.SendPropertyChanging();
				this._DateM = value;
				this.SendPropertyChanged("DateM");
				this.OnDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string DateH
	{
		get
		{
			return this._DateH;
		}
		set
		{
			if ((this._DateH != value))
			{
				this.OnDateHChanging(value);
				this.SendPropertyChanging();
				this._DateH = value;
				this.SendPropertyChanged("DateH");
				this.OnDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNO", DbType="Int NOT NULL")]
	public int TransactionNO
	{
		get
		{
			return this._TransactionNO;
		}
		set
		{
			if ((this._TransactionNO != value))
			{
				this.OnTransactionNOChanging(value);
				this.SendPropertyChanging();
				this._TransactionNO = value;
				this.SendPropertyChanged("TransactionNO");
				this.OnTransactionNOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Float NOT NULL")]
	public double Debit
	{
		get
		{
			return this._Debit;
		}
		set
		{
			if ((this._Debit != value))
			{
				this.OnDebitChanging(value);
				this.SendPropertyChanging();
				this._Debit = value;
				this.SendPropertyChanged("Debit");
				this.OnDebitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Float NOT NULL")]
	public double Credit
	{
		get
		{
			return this._Credit;
		}
		set
		{
			if ((this._Credit != value))
			{
				this.OnCreditChanging(value);
				this.SendPropertyChanging();
				this._Credit = value;
				this.SendPropertyChanged("Credit");
				this.OnCreditChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesInvoice_SalesInvoicesDetail", Storage="_SalesInvoice", ThisKey="SalesInvoiceID", OtherKey="SalesInvoiceID", IsForeignKey=true)]
	public SalesInvoice SalesInvoice
	{
		get
		{
			return this._SalesInvoice.Entity;
		}
		set
		{
			SalesInvoice previousValue = this._SalesInvoice.Entity;
			if (((previousValue != value) 
						|| (this._SalesInvoice.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SalesInvoice.Entity = null;
					previousValue.SalesInvoicesDetails.Remove(this);
				}
				this._SalesInvoice.Entity = value;
				if ((value != null))
				{
					value.SalesInvoicesDetails.Add(this);
					this._SalesInvoiceID = value.SalesInvoiceID;
				}
				else
				{
					this._SalesInvoiceID = default(int);
				}
				this.SendPropertyChanged("SalesInvoice");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suppliers")]
public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SupplierID;
	
	private string _SupplierName;
	
	private string _Address;
	
	private string _Telphone;
	
	private string _Mobile;
	
	private string _Fax;
	
	private double _StartBalance;
	
	private double _Balance;
	
	private EntitySet<PaymentsForSupplier> _PaymentsForSuppliers;
	
	private EntitySet<PurchasesInvoice> _PurchasesInvoices;
	
	private EntitySet<PurchasesMaster> _PurchasesMasters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelphoneChanging(string value);
    partial void OnTelphoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnStartBalanceChanging(double value);
    partial void OnStartBalanceChanged();
    partial void OnBalanceChanging(double value);
    partial void OnBalanceChanged();
    #endregion
	
	public Supplier()
	{
		this._PaymentsForSuppliers = new EntitySet<PaymentsForSupplier>(new Action<PaymentsForSupplier>(this.attach_PaymentsForSuppliers), new Action<PaymentsForSupplier>(this.detach_PaymentsForSuppliers));
		this._PurchasesInvoices = new EntitySet<PurchasesInvoice>(new Action<PurchasesInvoice>(this.attach_PurchasesInvoices), new Action<PurchasesInvoice>(this.detach_PurchasesInvoices));
		this._PurchasesMasters = new EntitySet<PurchasesMaster>(new Action<PurchasesMaster>(this.attach_PurchasesMasters), new Action<PurchasesMaster>(this.detach_PurchasesMasters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SupplierID
	{
		get
		{
			return this._SupplierID;
		}
		set
		{
			if ((this._SupplierID != value))
			{
				this.OnSupplierIDChanging(value);
				this.SendPropertyChanging();
				this._SupplierID = value;
				this.SendPropertyChanged("SupplierID");
				this.OnSupplierIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SupplierName
	{
		get
		{
			return this._SupplierName;
		}
		set
		{
			if ((this._SupplierName != value))
			{
				this.OnSupplierNameChanging(value);
				this.SendPropertyChanging();
				this._SupplierName = value;
				this.SendPropertyChanged("SupplierName");
				this.OnSupplierNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telphone", DbType="NVarChar(50)")]
	public string Telphone
	{
		get
		{
			return this._Telphone;
		}
		set
		{
			if ((this._Telphone != value))
			{
				this.OnTelphoneChanging(value);
				this.SendPropertyChanging();
				this._Telphone = value;
				this.SendPropertyChanged("Telphone");
				this.OnTelphoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartBalance", DbType="Float NOT NULL")]
	public double StartBalance
	{
		get
		{
			return this._StartBalance;
		}
		set
		{
			if ((this._StartBalance != value))
			{
				this.OnStartBalanceChanging(value);
				this.SendPropertyChanging();
				this._StartBalance = value;
				this.SendPropertyChanged("StartBalance");
				this.OnStartBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Float NOT NULL")]
	public double Balance
	{
		get
		{
			return this._Balance;
		}
		set
		{
			if ((this._Balance != value))
			{
				this.OnBalanceChanging(value);
				this.SendPropertyChanging();
				this._Balance = value;
				this.SendPropertyChanged("Balance");
				this.OnBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PaymentsForSupplier", Storage="_PaymentsForSuppliers", ThisKey="SupplierID", OtherKey="SupplierID")]
	public EntitySet<PaymentsForSupplier> PaymentsForSuppliers
	{
		get
		{
			return this._PaymentsForSuppliers;
		}
		set
		{
			this._PaymentsForSuppliers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PurchasesInvoice", Storage="_PurchasesInvoices", ThisKey="SupplierID", OtherKey="SupplierID")]
	public EntitySet<PurchasesInvoice> PurchasesInvoices
	{
		get
		{
			return this._PurchasesInvoices;
		}
		set
		{
			this._PurchasesInvoices.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PurchasesMaster", Storage="_PurchasesMasters", ThisKey="SupplierID", OtherKey="SupplierID")]
	public EntitySet<PurchasesMaster> PurchasesMasters
	{
		get
		{
			return this._PurchasesMasters;
		}
		set
		{
			this._PurchasesMasters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PaymentsForSuppliers(PaymentsForSupplier entity)
	{
		this.SendPropertyChanging();
		entity.Supplier = this;
	}
	
	private void detach_PaymentsForSuppliers(PaymentsForSupplier entity)
	{
		this.SendPropertyChanging();
		entity.Supplier = null;
	}
	
	private void attach_PurchasesInvoices(PurchasesInvoice entity)
	{
		this.SendPropertyChanging();
		entity.Supplier = this;
	}
	
	private void detach_PurchasesInvoices(PurchasesInvoice entity)
	{
		this.SendPropertyChanging();
		entity.Supplier = null;
	}
	
	private void attach_PurchasesMasters(PurchasesMaster entity)
	{
		this.SendPropertyChanging();
		entity.Supplier = this;
	}
	
	private void detach_PurchasesMasters(PurchasesMaster entity)
	{
		this.SendPropertyChanging();
		entity.Supplier = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeeID;
	
	private string _EmployeeName;
	
	private System.Nullable<int> _JobID;
	
	private string _Adress;
	
	private string _Telphone;
	
	private string _Mobile;
	
	private string _Email;
	
	private EntitySet<PurchasesMaster> _PurchasesMasters;
	
	private EntitySet<SalesMaster> _SalesMasters;
	
	private EntityRef<Job> _Job;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnJobIDChanging(System.Nullable<int> value);
    partial void OnJobIDChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnTelphoneChanging(string value);
    partial void OnTelphoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
	
	public Employee()
	{
		this._PurchasesMasters = new EntitySet<PurchasesMaster>(new Action<PurchasesMaster>(this.attach_PurchasesMasters), new Action<PurchasesMaster>(this.detach_PurchasesMasters));
		this._SalesMasters = new EntitySet<SalesMaster>(new Action<SalesMaster>(this.attach_SalesMasters), new Action<SalesMaster>(this.detach_SalesMasters));
		this._Job = default(EntityRef<Job>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string EmployeeName
	{
		get
		{
			return this._EmployeeName;
		}
		set
		{
			if ((this._EmployeeName != value))
			{
				this.OnEmployeeNameChanging(value);
				this.SendPropertyChanging();
				this._EmployeeName = value;
				this.SendPropertyChanged("EmployeeName");
				this.OnEmployeeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int")]
	public System.Nullable<int> JobID
	{
		get
		{
			return this._JobID;
		}
		set
		{
			if ((this._JobID != value))
			{
				if (this._Job.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnJobIDChanging(value);
				this.SendPropertyChanging();
				this._JobID = value;
				this.SendPropertyChanged("JobID");
				this.OnJobIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(250)")]
	public string Adress
	{
		get
		{
			return this._Adress;
		}
		set
		{
			if ((this._Adress != value))
			{
				this.OnAdressChanging(value);
				this.SendPropertyChanging();
				this._Adress = value;
				this.SendPropertyChanged("Adress");
				this.OnAdressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telphone", DbType="NVarChar(50)")]
	public string Telphone
	{
		get
		{
			return this._Telphone;
		}
		set
		{
			if ((this._Telphone != value))
			{
				this.OnTelphoneChanging(value);
				this.SendPropertyChanging();
				this._Telphone = value;
				this.SendPropertyChanged("Telphone");
				this.OnTelphoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(10)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PurchasesMaster", Storage="_PurchasesMasters", ThisKey="EmployeeID", OtherKey="EmployeeID")]
	public EntitySet<PurchasesMaster> PurchasesMasters
	{
		get
		{
			return this._PurchasesMasters;
		}
		set
		{
			this._PurchasesMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SalesMaster", Storage="_SalesMasters", ThisKey="EmployeeID", OtherKey="EmployeeID")]
	public EntitySet<SalesMaster> SalesMasters
	{
		get
		{
			return this._SalesMasters;
		}
		set
		{
			this._SalesMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Employee", Storage="_Job", ThisKey="JobID", OtherKey="JobID", IsForeignKey=true)]
	public Job Job
	{
		get
		{
			return this._Job.Entity;
		}
		set
		{
			Job previousValue = this._Job.Entity;
			if (((previousValue != value) 
						|| (this._Job.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Job.Entity = null;
					previousValue.Employees.Remove(this);
				}
				this._Job.Entity = value;
				if ((value != null))
				{
					value.Employees.Add(this);
					this._JobID = value.JobID;
				}
				else
				{
					this._JobID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Job");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PurchasesMasters(PurchasesMaster entity)
	{
		this.SendPropertyChanging();
		entity.Employee = this;
	}
	
	private void detach_PurchasesMasters(PurchasesMaster entity)
	{
		this.SendPropertyChanging();
		entity.Employee = null;
	}
	
	private void attach_SalesMasters(SalesMaster entity)
	{
		this.SendPropertyChanging();
		entity.Employee = this;
	}
	
	private void detach_SalesMasters(SalesMaster entity)
	{
		this.SendPropertyChanging();
		entity.Employee = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesDiscardsMaster")]
public partial class SalesDiscardsMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesDiscardsID;
	
	private System.DateTime _SalesDiscardsDateM;
	
	private string _SalesDiscardsDateH;
	
	private int _SalesID;
	
	private bool _IsCash;
	
	private string _Notes;
	
	private EntitySet<SalesDiscardsDetail> _SalesDiscardsDetails;
	
	private EntityRef<SalesMaster> _SalesMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesDiscardsIDChanging(int value);
    partial void OnSalesDiscardsIDChanged();
    partial void OnSalesDiscardsDateMChanging(System.DateTime value);
    partial void OnSalesDiscardsDateMChanged();
    partial void OnSalesDiscardsDateHChanging(string value);
    partial void OnSalesDiscardsDateHChanged();
    partial void OnSalesIDChanging(int value);
    partial void OnSalesIDChanged();
    partial void OnIsCashChanging(bool value);
    partial void OnIsCashChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
	
	public SalesDiscardsMaster()
	{
		this._SalesDiscardsDetails = new EntitySet<SalesDiscardsDetail>(new Action<SalesDiscardsDetail>(this.attach_SalesDiscardsDetails), new Action<SalesDiscardsDetail>(this.detach_SalesDiscardsDetails));
		this._SalesMaster = default(EntityRef<SalesMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SalesDiscardsID
	{
		get
		{
			return this._SalesDiscardsID;
		}
		set
		{
			if ((this._SalesDiscardsID != value))
			{
				this.OnSalesDiscardsIDChanging(value);
				this.SendPropertyChanging();
				this._SalesDiscardsID = value;
				this.SendPropertyChanged("SalesDiscardsID");
				this.OnSalesDiscardsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsDateM", DbType="DateTime NOT NULL")]
	public System.DateTime SalesDiscardsDateM
	{
		get
		{
			return this._SalesDiscardsDateM;
		}
		set
		{
			if ((this._SalesDiscardsDateM != value))
			{
				this.OnSalesDiscardsDateMChanging(value);
				this.SendPropertyChanging();
				this._SalesDiscardsDateM = value;
				this.SendPropertyChanged("SalesDiscardsDateM");
				this.OnSalesDiscardsDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsDateH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SalesDiscardsDateH
	{
		get
		{
			return this._SalesDiscardsDateH;
		}
		set
		{
			if ((this._SalesDiscardsDateH != value))
			{
				this.OnSalesDiscardsDateHChanging(value);
				this.SendPropertyChanging();
				this._SalesDiscardsDateH = value;
				this.SendPropertyChanged("SalesDiscardsDateH");
				this.OnSalesDiscardsDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesID", DbType="Int NOT NULL")]
	public int SalesID
	{
		get
		{
			return this._SalesID;
		}
		set
		{
			if ((this._SalesID != value))
			{
				if (this._SalesMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesIDChanging(value);
				this.SendPropertyChanging();
				this._SalesID = value;
				this.SendPropertyChanged("SalesID");
				this.OnSalesIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCash", DbType="Bit NOT NULL")]
	public bool IsCash
	{
		get
		{
			return this._IsCash;
		}
		set
		{
			if ((this._IsCash != value))
			{
				this.OnIsCashChanging(value);
				this.SendPropertyChanging();
				this._IsCash = value;
				this.SendPropertyChanged("IsCash");
				this.OnIsCashChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesDiscardsMaster_SalesDiscardsDetail", Storage="_SalesDiscardsDetails", ThisKey="SalesDiscardsID", OtherKey="SalesDiscardsID")]
	public EntitySet<SalesDiscardsDetail> SalesDiscardsDetails
	{
		get
		{
			return this._SalesDiscardsDetails;
		}
		set
		{
			this._SalesDiscardsDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesMaster_SalesDiscardsMaster", Storage="_SalesMaster", ThisKey="SalesID", OtherKey="SalesID", IsForeignKey=true)]
	public SalesMaster SalesMaster
	{
		get
		{
			return this._SalesMaster.Entity;
		}
		set
		{
			SalesMaster previousValue = this._SalesMaster.Entity;
			if (((previousValue != value) 
						|| (this._SalesMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SalesMaster.Entity = null;
					previousValue.SalesDiscardsMasters.Remove(this);
				}
				this._SalesMaster.Entity = value;
				if ((value != null))
				{
					value.SalesDiscardsMasters.Add(this);
					this._SalesID = value.SalesID;
				}
				else
				{
					this._SalesID = default(int);
				}
				this.SendPropertyChanged("SalesMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SalesDiscardsDetails(SalesDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.SalesDiscardsMaster = this;
	}
	
	private void detach_SalesDiscardsDetails(SalesDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.SalesDiscardsMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesDiscardsDetails")]
public partial class SalesDiscardsDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesDiscardsDetailID;
	
	private int _SalesDiscardsID;
	
	private int _ProductID;
	
	private double _Quantity;
	
	private double _Price;
	
	private EntityRef<SalesDiscardsMaster> _SalesDiscardsMaster;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesDiscardsDetailIDChanging(int value);
    partial void OnSalesDiscardsDetailIDChanged();
    partial void OnSalesDiscardsIDChanging(int value);
    partial void OnSalesDiscardsIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    #endregion
	
	public SalesDiscardsDetail()
	{
		this._SalesDiscardsMaster = default(EntityRef<SalesDiscardsMaster>);
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SalesDiscardsDetailID
	{
		get
		{
			return this._SalesDiscardsDetailID;
		}
		set
		{
			if ((this._SalesDiscardsDetailID != value))
			{
				this.OnSalesDiscardsDetailIDChanging(value);
				this.SendPropertyChanging();
				this._SalesDiscardsDetailID = value;
				this.SendPropertyChanged("SalesDiscardsDetailID");
				this.OnSalesDiscardsDetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsID", DbType="Int NOT NULL")]
	public int SalesDiscardsID
	{
		get
		{
			return this._SalesDiscardsID;
		}
		set
		{
			if ((this._SalesDiscardsID != value))
			{
				if (this._SalesDiscardsMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesDiscardsIDChanging(value);
				this.SendPropertyChanging();
				this._SalesDiscardsID = value;
				this.SendPropertyChanged("SalesDiscardsID");
				this.OnSalesDiscardsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
	public double Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesDiscardsMaster_SalesDiscardsDetail", Storage="_SalesDiscardsMaster", ThisKey="SalesDiscardsID", OtherKey="SalesDiscardsID", IsForeignKey=true)]
	public SalesDiscardsMaster SalesDiscardsMaster
	{
		get
		{
			return this._SalesDiscardsMaster.Entity;
		}
		set
		{
			SalesDiscardsMaster previousValue = this._SalesDiscardsMaster.Entity;
			if (((previousValue != value) 
						|| (this._SalesDiscardsMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SalesDiscardsMaster.Entity = null;
					previousValue.SalesDiscardsDetails.Remove(this);
				}
				this._SalesDiscardsMaster.Entity = value;
				if ((value != null))
				{
					value.SalesDiscardsDetails.Add(this);
					this._SalesDiscardsID = value.SalesDiscardsID;
				}
				else
				{
					this._SalesDiscardsID = default(int);
				}
				this.SendPropertyChanged("SalesDiscardsMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SalesDiscardsDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.SalesDiscardsDetails.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.SalesDiscardsDetails.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitConversions")]
public partial class UnitConversion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UnitConversionID;
	
	private int _UnitID;
	
	private double _Factor;
	
	private EntityRef<Unit> _Unit;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitConversionIDChanging(int value);
    partial void OnUnitConversionIDChanged();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnFactorChanging(double value);
    partial void OnFactorChanged();
    #endregion
	
	public UnitConversion()
	{
		this._Unit = default(EntityRef<Unit>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitConversionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UnitConversionID
	{
		get
		{
			return this._UnitConversionID;
		}
		set
		{
			if ((this._UnitConversionID != value))
			{
				this.OnUnitConversionIDChanging(value);
				this.SendPropertyChanging();
				this._UnitConversionID = value;
				this.SendPropertyChanged("UnitConversionID");
				this.OnUnitConversionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int NOT NULL")]
	public int UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				if (this._Unit.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Float NOT NULL")]
	public double Factor
	{
		get
		{
			return this._Factor;
		}
		set
		{
			if ((this._Factor != value))
			{
				this.OnFactorChanging(value);
				this.SendPropertyChanging();
				this._Factor = value;
				this.SendPropertyChanged("Factor");
				this.OnFactorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_UnitConversion", Storage="_Unit", ThisKey="UnitID", OtherKey="UnitID", IsForeignKey=true)]
	public Unit Unit
	{
		get
		{
			return this._Unit.Entity;
		}
		set
		{
			Unit previousValue = this._Unit.Entity;
			if (((previousValue != value) 
						|| (this._Unit.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Unit.Entity = null;
					previousValue.UnitConversions.Remove(this);
				}
				this._Unit.Entity = value;
				if ((value != null))
				{
					value.UnitConversions.Add(this);
					this._UnitID = value.UnitID;
				}
				else
				{
					this._UnitID = default(int);
				}
				this.SendPropertyChanged("Unit");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Units")]
public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UnitID;
	
	private string _UnitName_En;
	
	private string _UnitName_Ar;
	
	private string _symbol;
	
	private bool _Basic;
	
	private System.Nullable<int> _BasicUnitID;
	
	private EntitySet<UnitConversion> _UnitConversions;
	
	private EntitySet<Unit> _Units;
	
	private EntitySet<Product> _Products;
	
	private EntitySet<Product> _Products1;
	
	private EntitySet<SalesDetail> _SalesDetails;
	
	private EntitySet<PurchaseDiscardsDetail> _PurchaseDiscardsDetails;
	
	private EntitySet<PurchaseDiscardsDetail> _PurchaseDiscardsDetails1;
	
	private EntityRef<Unit> _Unit1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnUnitName_EnChanging(string value);
    partial void OnUnitName_EnChanged();
    partial void OnUnitName_ArChanging(string value);
    partial void OnUnitName_ArChanged();
    partial void OnsymbolChanging(string value);
    partial void OnsymbolChanged();
    partial void OnBasicChanging(bool value);
    partial void OnBasicChanged();
    partial void OnBasicUnitIDChanging(System.Nullable<int> value);
    partial void OnBasicUnitIDChanged();
    #endregion
	
	public Unit()
	{
		this._UnitConversions = new EntitySet<UnitConversion>(new Action<UnitConversion>(this.attach_UnitConversions), new Action<UnitConversion>(this.detach_UnitConversions));
		this._Units = new EntitySet<Unit>(new Action<Unit>(this.attach_Units), new Action<Unit>(this.detach_Units));
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		this._Products1 = new EntitySet<Product>(new Action<Product>(this.attach_Products1), new Action<Product>(this.detach_Products1));
		this._SalesDetails = new EntitySet<SalesDetail>(new Action<SalesDetail>(this.attach_SalesDetails), new Action<SalesDetail>(this.detach_SalesDetails));
		this._PurchaseDiscardsDetails = new EntitySet<PurchaseDiscardsDetail>(new Action<PurchaseDiscardsDetail>(this.attach_PurchaseDiscardsDetails), new Action<PurchaseDiscardsDetail>(this.detach_PurchaseDiscardsDetails));
		this._PurchaseDiscardsDetails1 = new EntitySet<PurchaseDiscardsDetail>(new Action<PurchaseDiscardsDetail>(this.attach_PurchaseDiscardsDetails1), new Action<PurchaseDiscardsDetail>(this.detach_PurchaseDiscardsDetails1));
		this._Unit1 = default(EntityRef<Unit>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName_En", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UnitName_En
	{
		get
		{
			return this._UnitName_En;
		}
		set
		{
			if ((this._UnitName_En != value))
			{
				this.OnUnitName_EnChanging(value);
				this.SendPropertyChanging();
				this._UnitName_En = value;
				this.SendPropertyChanged("UnitName_En");
				this.OnUnitName_EnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName_Ar", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UnitName_Ar
	{
		get
		{
			return this._UnitName_Ar;
		}
		set
		{
			if ((this._UnitName_Ar != value))
			{
				this.OnUnitName_ArChanging(value);
				this.SendPropertyChanging();
				this._UnitName_Ar = value;
				this.SendPropertyChanged("UnitName_Ar");
				this.OnUnitName_ArChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symbol", DbType="NChar(3)")]
	public string symbol
	{
		get
		{
			return this._symbol;
		}
		set
		{
			if ((this._symbol != value))
			{
				this.OnsymbolChanging(value);
				this.SendPropertyChanging();
				this._symbol = value;
				this.SendPropertyChanged("symbol");
				this.OnsymbolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Basic", DbType="Bit NOT NULL")]
	public bool Basic
	{
		get
		{
			return this._Basic;
		}
		set
		{
			if ((this._Basic != value))
			{
				this.OnBasicChanging(value);
				this.SendPropertyChanging();
				this._Basic = value;
				this.SendPropertyChanged("Basic");
				this.OnBasicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicUnitID", DbType="Int")]
	public System.Nullable<int> BasicUnitID
	{
		get
		{
			return this._BasicUnitID;
		}
		set
		{
			if ((this._BasicUnitID != value))
			{
				if (this._Unit1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBasicUnitIDChanging(value);
				this.SendPropertyChanging();
				this._BasicUnitID = value;
				this.SendPropertyChanged("BasicUnitID");
				this.OnBasicUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_UnitConversion", Storage="_UnitConversions", ThisKey="UnitID", OtherKey="UnitID")]
	public EntitySet<UnitConversion> UnitConversions
	{
		get
		{
			return this._UnitConversions;
		}
		set
		{
			this._UnitConversions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Unit", Storage="_Units", ThisKey="UnitID", OtherKey="BasicUnitID")]
	public EntitySet<Unit> Units
	{
		get
		{
			return this._Units;
		}
		set
		{
			this._Units.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product", Storage="_Products", ThisKey="UnitID", OtherKey="UnitID")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product1", Storage="_Products1", ThisKey="UnitID", OtherKey="BasicUnitID")]
	public EntitySet<Product> Products1
	{
		get
		{
			return this._Products1;
		}
		set
		{
			this._Products1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_SalesDetail", Storage="_SalesDetails", ThisKey="UnitID", OtherKey="UnitID")]
	public EntitySet<SalesDetail> SalesDetails
	{
		get
		{
			return this._SalesDetails;
		}
		set
		{
			this._SalesDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_PurchaseDiscardsDetail", Storage="_PurchaseDiscardsDetails", ThisKey="UnitID", OtherKey="UnitID")]
	public EntitySet<PurchaseDiscardsDetail> PurchaseDiscardsDetails
	{
		get
		{
			return this._PurchaseDiscardsDetails;
		}
		set
		{
			this._PurchaseDiscardsDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_PurchaseDiscardsDetail1", Storage="_PurchaseDiscardsDetails1", ThisKey="UnitID", OtherKey="BasicUnitID")]
	public EntitySet<PurchaseDiscardsDetail> PurchaseDiscardsDetails1
	{
		get
		{
			return this._PurchaseDiscardsDetails1;
		}
		set
		{
			this._PurchaseDiscardsDetails1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Unit", Storage="_Unit1", ThisKey="BasicUnitID", OtherKey="UnitID", IsForeignKey=true)]
	public Unit Unit1
	{
		get
		{
			return this._Unit1.Entity;
		}
		set
		{
			Unit previousValue = this._Unit1.Entity;
			if (((previousValue != value) 
						|| (this._Unit1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Unit1.Entity = null;
					previousValue.Units.Remove(this);
				}
				this._Unit1.Entity = value;
				if ((value != null))
				{
					value.Units.Add(this);
					this._BasicUnitID = value.UnitID;
				}
				else
				{
					this._BasicUnitID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Unit1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_UnitConversions(UnitConversion entity)
	{
		this.SendPropertyChanging();
		entity.Unit = this;
	}
	
	private void detach_UnitConversions(UnitConversion entity)
	{
		this.SendPropertyChanging();
		entity.Unit = null;
	}
	
	private void attach_Units(Unit entity)
	{
		this.SendPropertyChanging();
		entity.Unit1 = this;
	}
	
	private void detach_Units(Unit entity)
	{
		this.SendPropertyChanging();
		entity.Unit1 = null;
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Unit = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.Unit = null;
	}
	
	private void attach_Products1(Product entity)
	{
		this.SendPropertyChanging();
		entity.Unit1 = this;
	}
	
	private void detach_Products1(Product entity)
	{
		this.SendPropertyChanging();
		entity.Unit1 = null;
	}
	
	private void attach_SalesDetails(SalesDetail entity)
	{
		this.SendPropertyChanging();
		entity.Unit = this;
	}
	
	private void detach_SalesDetails(SalesDetail entity)
	{
		this.SendPropertyChanging();
		entity.Unit = null;
	}
	
	private void attach_PurchaseDiscardsDetails(PurchaseDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.Unit = this;
	}
	
	private void detach_PurchaseDiscardsDetails(PurchaseDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.Unit = null;
	}
	
	private void attach_PurchaseDiscardsDetails1(PurchaseDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.Unit1 = this;
	}
	
	private void detach_PurchaseDiscardsDetails1(PurchaseDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.Unit1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private string _ProductName;
	
	private System.Nullable<double> _Price;
	
	private System.Nullable<int> _CategoryID;
	
	private string _Description;
	
	private double _SQty;
	
	private int _UnitID;
	
	private double _StartQuantity;
	
	private double _Quantity;
	
	private int _BasicUnitID;
	
	private EntitySet<SalesDiscardsDetail> _SalesDiscardsDetails;
	
	private EntitySet<PurchasesDetail> _PurchasesDetails;
	
	private EntitySet<SalesDetail> _SalesDetails;
	
	private EntitySet<PurchaseDiscardsDetail> _PurchaseDiscardsDetails;
	
	private EntityRef<Category> _Category;
	
	private EntityRef<Unit> _Unit;
	
	private EntityRef<Unit> _Unit1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSQtyChanging(double value);
    partial void OnSQtyChanged();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnStartQuantityChanging(double value);
    partial void OnStartQuantityChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnBasicUnitIDChanging(int value);
    partial void OnBasicUnitIDChanged();
    #endregion
	
	public Product()
	{
		this._SalesDiscardsDetails = new EntitySet<SalesDiscardsDetail>(new Action<SalesDiscardsDetail>(this.attach_SalesDiscardsDetails), new Action<SalesDiscardsDetail>(this.detach_SalesDiscardsDetails));
		this._PurchasesDetails = new EntitySet<PurchasesDetail>(new Action<PurchasesDetail>(this.attach_PurchasesDetails), new Action<PurchasesDetail>(this.detach_PurchasesDetails));
		this._SalesDetails = new EntitySet<SalesDetail>(new Action<SalesDetail>(this.attach_SalesDetails), new Action<SalesDetail>(this.detach_SalesDetails));
		this._PurchaseDiscardsDetails = new EntitySet<PurchaseDiscardsDetail>(new Action<PurchaseDiscardsDetail>(this.attach_PurchaseDiscardsDetails), new Action<PurchaseDiscardsDetail>(this.detach_PurchaseDiscardsDetails));
		this._Category = default(EntityRef<Category>);
		this._Unit = default(EntityRef<Unit>);
		this._Unit1 = default(EntityRef<Unit>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string ProductName
	{
		get
		{
			return this._ProductName;
		}
		set
		{
			if ((this._ProductName != value))
			{
				this.OnProductNameChanging(value);
				this.SendPropertyChanging();
				this._ProductName = value;
				this.SendPropertyChanged("ProductName");
				this.OnProductNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
	public System.Nullable<double> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
	public System.Nullable<int> CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				if (this._Category.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._CategoryID = value;
				this.SendPropertyChanged("CategoryID");
				this.OnCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SQty", DbType="Float NOT NULL")]
	public double SQty
	{
		get
		{
			return this._SQty;
		}
		set
		{
			if ((this._SQty != value))
			{
				this.OnSQtyChanging(value);
				this.SendPropertyChanging();
				this._SQty = value;
				this.SendPropertyChanged("SQty");
				this.OnSQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int NOT NULL")]
	public int UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				if (this._Unit.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartQuantity", DbType="Float NOT NULL")]
	public double StartQuantity
	{
		get
		{
			return this._StartQuantity;
		}
		set
		{
			if ((this._StartQuantity != value))
			{
				this.OnStartQuantityChanging(value);
				this.SendPropertyChanging();
				this._StartQuantity = value;
				this.SendPropertyChanged("StartQuantity");
				this.OnStartQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicUnitID", DbType="Int NOT NULL")]
	public int BasicUnitID
	{
		get
		{
			return this._BasicUnitID;
		}
		set
		{
			if ((this._BasicUnitID != value))
			{
				if (this._Unit1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBasicUnitIDChanging(value);
				this.SendPropertyChanging();
				this._BasicUnitID = value;
				this.SendPropertyChanged("BasicUnitID");
				this.OnBasicUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SalesDiscardsDetail", Storage="_SalesDiscardsDetails", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<SalesDiscardsDetail> SalesDiscardsDetails
	{
		get
		{
			return this._SalesDiscardsDetails;
		}
		set
		{
			this._SalesDiscardsDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PurchasesDetail", Storage="_PurchasesDetails", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<PurchasesDetail> PurchasesDetails
	{
		get
		{
			return this._PurchasesDetails;
		}
		set
		{
			this._PurchasesDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SalesDetail", Storage="_SalesDetails", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<SalesDetail> SalesDetails
	{
		get
		{
			return this._SalesDetails;
		}
		set
		{
			this._SalesDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PurchaseDiscardsDetail", Storage="_PurchaseDiscardsDetails", ThisKey="ProductID", OtherKey="ProductID")]
	public EntitySet<PurchaseDiscardsDetail> PurchaseDiscardsDetails
	{
		get
		{
			return this._PurchaseDiscardsDetails;
		}
		set
		{
			this._PurchaseDiscardsDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
	public Category Category
	{
		get
		{
			return this._Category.Entity;
		}
		set
		{
			Category previousValue = this._Category.Entity;
			if (((previousValue != value) 
						|| (this._Category.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Category.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._Category.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._CategoryID = value.CategoryID;
				}
				else
				{
					this._CategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Category");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product", Storage="_Unit", ThisKey="UnitID", OtherKey="UnitID", IsForeignKey=true)]
	public Unit Unit
	{
		get
		{
			return this._Unit.Entity;
		}
		set
		{
			Unit previousValue = this._Unit.Entity;
			if (((previousValue != value) 
						|| (this._Unit.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Unit.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._Unit.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._UnitID = value.UnitID;
				}
				else
				{
					this._UnitID = default(int);
				}
				this.SendPropertyChanged("Unit");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product1", Storage="_Unit1", ThisKey="BasicUnitID", OtherKey="UnitID", IsForeignKey=true)]
	public Unit Unit1
	{
		get
		{
			return this._Unit1.Entity;
		}
		set
		{
			Unit previousValue = this._Unit1.Entity;
			if (((previousValue != value) 
						|| (this._Unit1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Unit1.Entity = null;
					previousValue.Products1.Remove(this);
				}
				this._Unit1.Entity = value;
				if ((value != null))
				{
					value.Products1.Add(this);
					this._BasicUnitID = value.UnitID;
				}
				else
				{
					this._BasicUnitID = default(int);
				}
				this.SendPropertyChanged("Unit1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SalesDiscardsDetails(SalesDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_SalesDiscardsDetails(SalesDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_PurchasesDetails(PurchasesDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_PurchasesDetails(PurchasesDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_SalesDetails(SalesDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_SalesDetails(SalesDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_PurchaseDiscardsDetails(PurchaseDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_PurchaseDiscardsDetails(PurchaseDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchasesDetails")]
public partial class PurchasesDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PurchasesDetailID;
	
	private int _PurchaseID;
	
	private int _ProductID;
	
	private double _PQTY;
	
	private int _UnitID;
	
	private double _Quantity;
	
	private int _BasicUnitID;
	
	private double _PUnitPrice;
	
	private double _UnitPrice;
	
	private double _TotalPrice;
	
	private EntityRef<Product> _Product;
	
	private EntityRef<PurchasesMaster> _PurchasesMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchasesDetailIDChanging(int value);
    partial void OnPurchasesDetailIDChanged();
    partial void OnPurchaseIDChanging(int value);
    partial void OnPurchaseIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnPQTYChanging(double value);
    partial void OnPQTYChanged();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnBasicUnitIDChanging(int value);
    partial void OnBasicUnitIDChanged();
    partial void OnPUnitPriceChanging(double value);
    partial void OnPUnitPriceChanged();
    partial void OnUnitPriceChanging(double value);
    partial void OnUnitPriceChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    #endregion
	
	public PurchasesDetail()
	{
		this._Product = default(EntityRef<Product>);
		this._PurchasesMaster = default(EntityRef<PurchasesMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasesDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PurchasesDetailID
	{
		get
		{
			return this._PurchasesDetailID;
		}
		set
		{
			if ((this._PurchasesDetailID != value))
			{
				this.OnPurchasesDetailIDChanging(value);
				this.SendPropertyChanging();
				this._PurchasesDetailID = value;
				this.SendPropertyChanged("PurchasesDetailID");
				this.OnPurchasesDetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int NOT NULL")]
	public int PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				if (this._PurchasesMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPurchaseIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseID = value;
				this.SendPropertyChanged("PurchaseID");
				this.OnPurchaseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PQTY", DbType="Float NOT NULL")]
	public double PQTY
	{
		get
		{
			return this._PQTY;
		}
		set
		{
			if ((this._PQTY != value))
			{
				this.OnPQTYChanging(value);
				this.SendPropertyChanging();
				this._PQTY = value;
				this.SendPropertyChanged("PQTY");
				this.OnPQTYChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int NOT NULL")]
	public int UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicUnitID", DbType="Int NOT NULL")]
	public int BasicUnitID
	{
		get
		{
			return this._BasicUnitID;
		}
		set
		{
			if ((this._BasicUnitID != value))
			{
				this.OnBasicUnitIDChanging(value);
				this.SendPropertyChanging();
				this._BasicUnitID = value;
				this.SendPropertyChanged("BasicUnitID");
				this.OnBasicUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUnitPrice", DbType="Float NOT NULL")]
	public double PUnitPrice
	{
		get
		{
			return this._PUnitPrice;
		}
		set
		{
			if ((this._PUnitPrice != value))
			{
				this.OnPUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._PUnitPrice = value;
				this.SendPropertyChanged("PUnitPrice");
				this.OnPUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float NOT NULL")]
	public double UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
	public double TotalPrice
	{
		get
		{
			return this._TotalPrice;
		}
		set
		{
			if ((this._TotalPrice != value))
			{
				this.OnTotalPriceChanging(value);
				this.SendPropertyChanging();
				this._TotalPrice = value;
				this.SendPropertyChanged("TotalPrice");
				this.OnTotalPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PurchasesDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.PurchasesDetails.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.PurchasesDetails.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchasesMaster_PurchasesDetail", Storage="_PurchasesMaster", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
	public PurchasesMaster PurchasesMaster
	{
		get
		{
			return this._PurchasesMaster.Entity;
		}
		set
		{
			PurchasesMaster previousValue = this._PurchasesMaster.Entity;
			if (((previousValue != value) 
						|| (this._PurchasesMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PurchasesMaster.Entity = null;
					previousValue.PurchasesDetails.Remove(this);
				}
				this._PurchasesMaster.Entity = value;
				if ((value != null))
				{
					value.PurchasesDetails.Add(this);
					this._PurchaseID = value.PurchaseID;
				}
				else
				{
					this._PurchaseID = default(int);
				}
				this.SendPropertyChanged("PurchasesMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchasesMaster")]
public partial class PurchasesMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PurchaseID;
	
	private System.Nullable<System.DateTime> _PurchaseDateM;
	
	private string _PurchaseDateH;
	
	private int _SupplierID;
	
	private System.Nullable<int> _EmployeeID;
	
	private bool _ISCash;
	
	private string _Notes;
	
	private double _TotalPurchase;
	
	private double _Payments;
	
	private double _Rest;
	
	private System.Nullable<int> _SupplierPaymentID;
	
	private EntitySet<PurchasesDetail> _PurchasesDetails;
	
	private EntitySet<PurchaseDiscardsMaster> _PurchaseDiscardsMasters;
	
	private EntityRef<Employee> _Employee;
	
	private EntityRef<Supplier> _Supplier;
	
	private EntityRef<PaymentsForSupplier> _PaymentsForSupplier;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseIDChanging(int value);
    partial void OnPurchaseIDChanged();
    partial void OnPurchaseDateMChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateMChanged();
    partial void OnPurchaseDateHChanging(string value);
    partial void OnPurchaseDateHChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnISCashChanging(bool value);
    partial void OnISCashChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnTotalPurchaseChanging(double value);
    partial void OnTotalPurchaseChanged();
    partial void OnPaymentsChanging(double value);
    partial void OnPaymentsChanged();
    partial void OnRestChanging(double value);
    partial void OnRestChanged();
    partial void OnSupplierPaymentIDChanging(System.Nullable<int> value);
    partial void OnSupplierPaymentIDChanged();
    #endregion
	
	public PurchasesMaster()
	{
		this._PurchasesDetails = new EntitySet<PurchasesDetail>(new Action<PurchasesDetail>(this.attach_PurchasesDetails), new Action<PurchasesDetail>(this.detach_PurchasesDetails));
		this._PurchaseDiscardsMasters = new EntitySet<PurchaseDiscardsMaster>(new Action<PurchaseDiscardsMaster>(this.attach_PurchaseDiscardsMasters), new Action<PurchaseDiscardsMaster>(this.detach_PurchaseDiscardsMasters));
		this._Employee = default(EntityRef<Employee>);
		this._Supplier = default(EntityRef<Supplier>);
		this._PaymentsForSupplier = default(EntityRef<PaymentsForSupplier>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				this.OnPurchaseIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseID = value;
				this.SendPropertyChanged("PurchaseID");
				this.OnPurchaseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateM", DbType="DateTime")]
	public System.Nullable<System.DateTime> PurchaseDateM
	{
		get
		{
			return this._PurchaseDateM;
		}
		set
		{
			if ((this._PurchaseDateM != value))
			{
				this.OnPurchaseDateMChanging(value);
				this.SendPropertyChanging();
				this._PurchaseDateM = value;
				this.SendPropertyChanged("PurchaseDateM");
				this.OnPurchaseDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateH", DbType="NVarChar(150)")]
	public string PurchaseDateH
	{
		get
		{
			return this._PurchaseDateH;
		}
		set
		{
			if ((this._PurchaseDateH != value))
			{
				this.OnPurchaseDateHChanging(value);
				this.SendPropertyChanging();
				this._PurchaseDateH = value;
				this.SendPropertyChanged("PurchaseDateH");
				this.OnPurchaseDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
	public int SupplierID
	{
		get
		{
			return this._SupplierID;
		}
		set
		{
			if ((this._SupplierID != value))
			{
				if (this._Supplier.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSupplierIDChanging(value);
				this.SendPropertyChanging();
				this._SupplierID = value;
				this.SendPropertyChanged("SupplierID");
				this.OnSupplierIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
	public System.Nullable<int> EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				if (this._Employee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISCash", DbType="Bit NOT NULL")]
	public bool ISCash
	{
		get
		{
			return this._ISCash;
		}
		set
		{
			if ((this._ISCash != value))
			{
				this.OnISCashChanging(value);
				this.SendPropertyChanging();
				this._ISCash = value;
				this.SendPropertyChanged("ISCash");
				this.OnISCashChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPurchase", DbType="Float NOT NULL")]
	public double TotalPurchase
	{
		get
		{
			return this._TotalPurchase;
		}
		set
		{
			if ((this._TotalPurchase != value))
			{
				this.OnTotalPurchaseChanging(value);
				this.SendPropertyChanging();
				this._TotalPurchase = value;
				this.SendPropertyChanged("TotalPurchase");
				this.OnTotalPurchaseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payments", DbType="Float NOT NULL")]
	public double Payments
	{
		get
		{
			return this._Payments;
		}
		set
		{
			if ((this._Payments != value))
			{
				this.OnPaymentsChanging(value);
				this.SendPropertyChanging();
				this._Payments = value;
				this.SendPropertyChanged("Payments");
				this.OnPaymentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rest", DbType="Float NOT NULL")]
	public double Rest
	{
		get
		{
			return this._Rest;
		}
		set
		{
			if ((this._Rest != value))
			{
				this.OnRestChanging(value);
				this.SendPropertyChanging();
				this._Rest = value;
				this.SendPropertyChanged("Rest");
				this.OnRestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPaymentID", DbType="Int")]
	public System.Nullable<int> SupplierPaymentID
	{
		get
		{
			return this._SupplierPaymentID;
		}
		set
		{
			if ((this._SupplierPaymentID != value))
			{
				if (this._PaymentsForSupplier.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSupplierPaymentIDChanging(value);
				this.SendPropertyChanging();
				this._SupplierPaymentID = value;
				this.SendPropertyChanged("SupplierPaymentID");
				this.OnSupplierPaymentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchasesMaster_PurchasesDetail", Storage="_PurchasesDetails", ThisKey="PurchaseID", OtherKey="PurchaseID")]
	public EntitySet<PurchasesDetail> PurchasesDetails
	{
		get
		{
			return this._PurchasesDetails;
		}
		set
		{
			this._PurchasesDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchasesMaster_PurchaseDiscardsMaster", Storage="_PurchaseDiscardsMasters", ThisKey="PurchaseID", OtherKey="PurchaseID")]
	public EntitySet<PurchaseDiscardsMaster> PurchaseDiscardsMasters
	{
		get
		{
			return this._PurchaseDiscardsMasters;
		}
		set
		{
			this._PurchaseDiscardsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PurchasesMaster", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
	public Employee Employee
	{
		get
		{
			return this._Employee.Entity;
		}
		set
		{
			Employee previousValue = this._Employee.Entity;
			if (((previousValue != value) 
						|| (this._Employee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Employee.Entity = null;
					previousValue.PurchasesMasters.Remove(this);
				}
				this._Employee.Entity = value;
				if ((value != null))
				{
					value.PurchasesMasters.Add(this);
					this._EmployeeID = value.EmployeeID;
				}
				else
				{
					this._EmployeeID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Employee");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PurchasesMaster", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
	public Supplier Supplier
	{
		get
		{
			return this._Supplier.Entity;
		}
		set
		{
			Supplier previousValue = this._Supplier.Entity;
			if (((previousValue != value) 
						|| (this._Supplier.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Supplier.Entity = null;
					previousValue.PurchasesMasters.Remove(this);
				}
				this._Supplier.Entity = value;
				if ((value != null))
				{
					value.PurchasesMasters.Add(this);
					this._SupplierID = value.SupplierID;
				}
				else
				{
					this._SupplierID = default(int);
				}
				this.SendPropertyChanged("Supplier");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentsForSupplier_PurchasesMaster", Storage="_PaymentsForSupplier", ThisKey="SupplierPaymentID", OtherKey="SupplierPaymentID", IsForeignKey=true)]
	public PaymentsForSupplier PaymentsForSupplier
	{
		get
		{
			return this._PaymentsForSupplier.Entity;
		}
		set
		{
			PaymentsForSupplier previousValue = this._PaymentsForSupplier.Entity;
			if (((previousValue != value) 
						|| (this._PaymentsForSupplier.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PaymentsForSupplier.Entity = null;
					previousValue.PurchasesMasters.Remove(this);
				}
				this._PaymentsForSupplier.Entity = value;
				if ((value != null))
				{
					value.PurchasesMasters.Add(this);
					this._SupplierPaymentID = value.SupplierPaymentID;
				}
				else
				{
					this._SupplierPaymentID = default(Nullable<int>);
				}
				this.SendPropertyChanged("PaymentsForSupplier");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PurchasesDetails(PurchasesDetail entity)
	{
		this.SendPropertyChanging();
		entity.PurchasesMaster = this;
	}
	
	private void detach_PurchasesDetails(PurchasesDetail entity)
	{
		this.SendPropertyChanging();
		entity.PurchasesMaster = null;
	}
	
	private void attach_PurchaseDiscardsMasters(PurchaseDiscardsMaster entity)
	{
		this.SendPropertyChanging();
		entity.PurchasesMaster = this;
	}
	
	private void detach_PurchaseDiscardsMasters(PurchaseDiscardsMaster entity)
	{
		this.SendPropertyChanging();
		entity.PurchasesMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesDetails")]
public partial class SalesDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesDetailID;
	
	private int _SalesID;
	
	private int _ProductID;
	
	private double _SQTY;
	
	private int _UnitID;
	
	private double _Quantity;
	
	private int _BasicUnitID;
	
	private double _SUnitPrice;
	
	private double _UnitPrice;
	
	private double _TotalPrice;
	
	private EntityRef<Product> _Product;
	
	private EntityRef<Unit> _Unit;
	
	private EntityRef<SalesMaster> _SalesMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesDetailIDChanging(int value);
    partial void OnSalesDetailIDChanged();
    partial void OnSalesIDChanging(int value);
    partial void OnSalesIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnSQTYChanging(double value);
    partial void OnSQTYChanged();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnBasicUnitIDChanging(int value);
    partial void OnBasicUnitIDChanged();
    partial void OnSUnitPriceChanging(double value);
    partial void OnSUnitPriceChanged();
    partial void OnUnitPriceChanging(double value);
    partial void OnUnitPriceChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    #endregion
	
	public SalesDetail()
	{
		this._Product = default(EntityRef<Product>);
		this._Unit = default(EntityRef<Unit>);
		this._SalesMaster = default(EntityRef<SalesMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SalesDetailID
	{
		get
		{
			return this._SalesDetailID;
		}
		set
		{
			if ((this._SalesDetailID != value))
			{
				this.OnSalesDetailIDChanging(value);
				this.SendPropertyChanging();
				this._SalesDetailID = value;
				this.SendPropertyChanged("SalesDetailID");
				this.OnSalesDetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesID", DbType="Int NOT NULL")]
	public int SalesID
	{
		get
		{
			return this._SalesID;
		}
		set
		{
			if ((this._SalesID != value))
			{
				if (this._SalesMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSalesIDChanging(value);
				this.SendPropertyChanging();
				this._SalesID = value;
				this.SendPropertyChanged("SalesID");
				this.OnSalesIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SQTY", DbType="Float NOT NULL")]
	public double SQTY
	{
		get
		{
			return this._SQTY;
		}
		set
		{
			if ((this._SQTY != value))
			{
				this.OnSQTYChanging(value);
				this.SendPropertyChanging();
				this._SQTY = value;
				this.SendPropertyChanged("SQTY");
				this.OnSQTYChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int NOT NULL")]
	public int UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				if (this._Unit.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicUnitID", DbType="Int NOT NULL")]
	public int BasicUnitID
	{
		get
		{
			return this._BasicUnitID;
		}
		set
		{
			if ((this._BasicUnitID != value))
			{
				this.OnBasicUnitIDChanging(value);
				this.SendPropertyChanging();
				this._BasicUnitID = value;
				this.SendPropertyChanged("BasicUnitID");
				this.OnBasicUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUnitPrice", DbType="Float NOT NULL")]
	public double SUnitPrice
	{
		get
		{
			return this._SUnitPrice;
		}
		set
		{
			if ((this._SUnitPrice != value))
			{
				this.OnSUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._SUnitPrice = value;
				this.SendPropertyChanged("SUnitPrice");
				this.OnSUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float NOT NULL")]
	public double UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
	public double TotalPrice
	{
		get
		{
			return this._TotalPrice;
		}
		set
		{
			if ((this._TotalPrice != value))
			{
				this.OnTotalPriceChanging(value);
				this.SendPropertyChanging();
				this._TotalPrice = value;
				this.SendPropertyChanged("TotalPrice");
				this.OnTotalPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SalesDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.SalesDetails.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.SalesDetails.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_SalesDetail", Storage="_Unit", ThisKey="UnitID", OtherKey="UnitID", IsForeignKey=true)]
	public Unit Unit
	{
		get
		{
			return this._Unit.Entity;
		}
		set
		{
			Unit previousValue = this._Unit.Entity;
			if (((previousValue != value) 
						|| (this._Unit.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Unit.Entity = null;
					previousValue.SalesDetails.Remove(this);
				}
				this._Unit.Entity = value;
				if ((value != null))
				{
					value.SalesDetails.Add(this);
					this._UnitID = value.UnitID;
				}
				else
				{
					this._UnitID = default(int);
				}
				this.SendPropertyChanged("Unit");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesMaster_SalesDetail", Storage="_SalesMaster", ThisKey="SalesID", OtherKey="SalesID", IsForeignKey=true)]
	public SalesMaster SalesMaster
	{
		get
		{
			return this._SalesMaster.Entity;
		}
		set
		{
			SalesMaster previousValue = this._SalesMaster.Entity;
			if (((previousValue != value) 
						|| (this._SalesMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SalesMaster.Entity = null;
					previousValue.SalesDetails.Remove(this);
				}
				this._SalesMaster.Entity = value;
				if ((value != null))
				{
					value.SalesDetails.Add(this);
					this._SalesID = value.SalesID;
				}
				else
				{
					this._SalesID = default(int);
				}
				this.SendPropertyChanged("SalesMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesMaster")]
public partial class SalesMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SalesID;
	
	private System.DateTime _SalesDateM;
	
	private string _SalesDateH;
	
	private System.Nullable<int> _CustomerID;
	
	private string _CustomerName;
	
	private System.Nullable<int> _EmployeeID;
	
	private bool _IsCash;
	
	private string _Notes;
	
	private double _TotalSales;
	
	private double _Payments;
	
	private double _Rest;
	
	private System.Nullable<int> _CustomerPaymentID;
	
	private EntitySet<SalesDiscardsMaster> _SalesDiscardsMasters;
	
	private EntitySet<SalesDetail> _SalesDetails;
	
	private EntityRef<Customer> _Customer;
	
	private EntityRef<Employee> _Employee;
	
	private EntityRef<CustomersPayment> _CustomersPayment;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesIDChanging(int value);
    partial void OnSalesIDChanged();
    partial void OnSalesDateMChanging(System.DateTime value);
    partial void OnSalesDateMChanged();
    partial void OnSalesDateHChanging(string value);
    partial void OnSalesDateHChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnIsCashChanging(bool value);
    partial void OnIsCashChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnTotalSalesChanging(double value);
    partial void OnTotalSalesChanged();
    partial void OnPaymentsChanging(double value);
    partial void OnPaymentsChanged();
    partial void OnRestChanging(double value);
    partial void OnRestChanged();
    partial void OnCustomerPaymentIDChanging(System.Nullable<int> value);
    partial void OnCustomerPaymentIDChanged();
    #endregion
	
	public SalesMaster()
	{
		this._SalesDiscardsMasters = new EntitySet<SalesDiscardsMaster>(new Action<SalesDiscardsMaster>(this.attach_SalesDiscardsMasters), new Action<SalesDiscardsMaster>(this.detach_SalesDiscardsMasters));
		this._SalesDetails = new EntitySet<SalesDetail>(new Action<SalesDetail>(this.attach_SalesDetails), new Action<SalesDetail>(this.detach_SalesDetails));
		this._Customer = default(EntityRef<Customer>);
		this._Employee = default(EntityRef<Employee>);
		this._CustomersPayment = default(EntityRef<CustomersPayment>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SalesID
	{
		get
		{
			return this._SalesID;
		}
		set
		{
			if ((this._SalesID != value))
			{
				this.OnSalesIDChanging(value);
				this.SendPropertyChanging();
				this._SalesID = value;
				this.SendPropertyChanged("SalesID");
				this.OnSalesIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateM", DbType="DateTime NOT NULL")]
	public System.DateTime SalesDateM
	{
		get
		{
			return this._SalesDateM;
		}
		set
		{
			if ((this._SalesDateM != value))
			{
				this.OnSalesDateMChanging(value);
				this.SendPropertyChanging();
				this._SalesDateM = value;
				this.SendPropertyChanged("SalesDateM");
				this.OnSalesDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SalesDateH
	{
		get
		{
			return this._SalesDateH;
		}
		set
		{
			if ((this._SalesDateH != value))
			{
				this.OnSalesDateHChanging(value);
				this.SendPropertyChanging();
				this._SalesDateH = value;
				this.SendPropertyChanged("SalesDateH");
				this.OnSalesDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
	public System.Nullable<int> CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50)")]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this.OnCustomerNameChanging(value);
				this.SendPropertyChanging();
				this._CustomerName = value;
				this.SendPropertyChanged("CustomerName");
				this.OnCustomerNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
	public System.Nullable<int> EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				if (this._Employee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCash", DbType="Bit NOT NULL")]
	public bool IsCash
	{
		get
		{
			return this._IsCash;
		}
		set
		{
			if ((this._IsCash != value))
			{
				this.OnIsCashChanging(value);
				this.SendPropertyChanging();
				this._IsCash = value;
				this.SendPropertyChanged("IsCash");
				this.OnIsCashChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSales", DbType="Float NOT NULL")]
	public double TotalSales
	{
		get
		{
			return this._TotalSales;
		}
		set
		{
			if ((this._TotalSales != value))
			{
				this.OnTotalSalesChanging(value);
				this.SendPropertyChanging();
				this._TotalSales = value;
				this.SendPropertyChanged("TotalSales");
				this.OnTotalSalesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payments", DbType="Float NOT NULL")]
	public double Payments
	{
		get
		{
			return this._Payments;
		}
		set
		{
			if ((this._Payments != value))
			{
				this.OnPaymentsChanging(value);
				this.SendPropertyChanging();
				this._Payments = value;
				this.SendPropertyChanged("Payments");
				this.OnPaymentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rest", DbType="Float NOT NULL")]
	public double Rest
	{
		get
		{
			return this._Rest;
		}
		set
		{
			if ((this._Rest != value))
			{
				this.OnRestChanging(value);
				this.SendPropertyChanging();
				this._Rest = value;
				this.SendPropertyChanged("Rest");
				this.OnRestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPaymentID", DbType="Int")]
	public System.Nullable<int> CustomerPaymentID
	{
		get
		{
			return this._CustomerPaymentID;
		}
		set
		{
			if ((this._CustomerPaymentID != value))
			{
				if (this._CustomersPayment.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerPaymentIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerPaymentID = value;
				this.SendPropertyChanged("CustomerPaymentID");
				this.OnCustomerPaymentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesMaster_SalesDiscardsMaster", Storage="_SalesDiscardsMasters", ThisKey="SalesID", OtherKey="SalesID")]
	public EntitySet<SalesDiscardsMaster> SalesDiscardsMasters
	{
		get
		{
			return this._SalesDiscardsMasters;
		}
		set
		{
			this._SalesDiscardsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesMaster_SalesDetail", Storage="_SalesDetails", ThisKey="SalesID", OtherKey="SalesID")]
	public EntitySet<SalesDetail> SalesDetails
	{
		get
		{
			return this._SalesDetails;
		}
		set
		{
			this._SalesDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesMaster", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
	public Customer Customer
	{
		get
		{
			return this._Customer.Entity;
		}
		set
		{
			Customer previousValue = this._Customer.Entity;
			if (((previousValue != value) 
						|| (this._Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Customer.Entity = null;
					previousValue.SalesMasters.Remove(this);
				}
				this._Customer.Entity = value;
				if ((value != null))
				{
					value.SalesMasters.Add(this);
					this._CustomerID = value.CustomerID;
				}
				else
				{
					this._CustomerID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Customer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_SalesMaster", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
	public Employee Employee
	{
		get
		{
			return this._Employee.Entity;
		}
		set
		{
			Employee previousValue = this._Employee.Entity;
			if (((previousValue != value) 
						|| (this._Employee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Employee.Entity = null;
					previousValue.SalesMasters.Remove(this);
				}
				this._Employee.Entity = value;
				if ((value != null))
				{
					value.SalesMasters.Add(this);
					this._EmployeeID = value.EmployeeID;
				}
				else
				{
					this._EmployeeID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Employee");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomersPayment_SalesMaster", Storage="_CustomersPayment", ThisKey="CustomerPaymentID", OtherKey="CustomerPaymentID", IsForeignKey=true)]
	public CustomersPayment CustomersPayment
	{
		get
		{
			return this._CustomersPayment.Entity;
		}
		set
		{
			CustomersPayment previousValue = this._CustomersPayment.Entity;
			if (((previousValue != value) 
						|| (this._CustomersPayment.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CustomersPayment.Entity = null;
					previousValue.SalesMasters.Remove(this);
				}
				this._CustomersPayment.Entity = value;
				if ((value != null))
				{
					value.SalesMasters.Add(this);
					this._CustomerPaymentID = value.CustomerPaymentID;
				}
				else
				{
					this._CustomerPaymentID = default(Nullable<int>);
				}
				this.SendPropertyChanged("CustomersPayment");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SalesDiscardsMasters(SalesDiscardsMaster entity)
	{
		this.SendPropertyChanging();
		entity.SalesMaster = this;
	}
	
	private void detach_SalesDiscardsMasters(SalesDiscardsMaster entity)
	{
		this.SendPropertyChanging();
		entity.SalesMaster = null;
	}
	
	private void attach_SalesDetails(SalesDetail entity)
	{
		this.SendPropertyChanging();
		entity.SalesMaster = this;
	}
	
	private void detach_SalesDetails(SalesDetail entity)
	{
		this.SendPropertyChanging();
		entity.SalesMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomersPayments")]
public partial class CustomersPayment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CustomerPaymentID;
	
	private System.Nullable<int> _CustomerID;
	
	private System.DateTime _PaymentDateM;
	
	private string _PaymentDateH;
	
	private double _Payment;
	
	private EntitySet<SalesMaster> _SalesMasters;
	
	private EntityRef<Customer> _Customer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerPaymentIDChanging(int value);
    partial void OnCustomerPaymentIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnPaymentDateMChanging(System.DateTime value);
    partial void OnPaymentDateMChanged();
    partial void OnPaymentDateHChanging(string value);
    partial void OnPaymentDateHChanged();
    partial void OnPaymentChanging(double value);
    partial void OnPaymentChanged();
    #endregion
	
	public CustomersPayment()
	{
		this._SalesMasters = new EntitySet<SalesMaster>(new Action<SalesMaster>(this.attach_SalesMasters), new Action<SalesMaster>(this.detach_SalesMasters));
		this._Customer = default(EntityRef<Customer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPaymentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CustomerPaymentID
	{
		get
		{
			return this._CustomerPaymentID;
		}
		set
		{
			if ((this._CustomerPaymentID != value))
			{
				this.OnCustomerPaymentIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerPaymentID = value;
				this.SendPropertyChanged("CustomerPaymentID");
				this.OnCustomerPaymentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
	public System.Nullable<int> CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDateM", DbType="DateTime NOT NULL")]
	public System.DateTime PaymentDateM
	{
		get
		{
			return this._PaymentDateM;
		}
		set
		{
			if ((this._PaymentDateM != value))
			{
				this.OnPaymentDateMChanging(value);
				this.SendPropertyChanging();
				this._PaymentDateM = value;
				this.SendPropertyChanged("PaymentDateM");
				this.OnPaymentDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string PaymentDateH
	{
		get
		{
			return this._PaymentDateH;
		}
		set
		{
			if ((this._PaymentDateH != value))
			{
				this.OnPaymentDateHChanging(value);
				this.SendPropertyChanging();
				this._PaymentDateH = value;
				this.SendPropertyChanged("PaymentDateH");
				this.OnPaymentDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Float NOT NULL")]
	public double Payment
	{
		get
		{
			return this._Payment;
		}
		set
		{
			if ((this._Payment != value))
			{
				this.OnPaymentChanging(value);
				this.SendPropertyChanging();
				this._Payment = value;
				this.SendPropertyChanged("Payment");
				this.OnPaymentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomersPayment_SalesMaster", Storage="_SalesMasters", ThisKey="CustomerPaymentID", OtherKey="CustomerPaymentID")]
	public EntitySet<SalesMaster> SalesMasters
	{
		get
		{
			return this._SalesMasters;
		}
		set
		{
			this._SalesMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomersPayment", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
	public Customer Customer
	{
		get
		{
			return this._Customer.Entity;
		}
		set
		{
			Customer previousValue = this._Customer.Entity;
			if (((previousValue != value) 
						|| (this._Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Customer.Entity = null;
					previousValue.CustomersPayments.Remove(this);
				}
				this._Customer.Entity = value;
				if ((value != null))
				{
					value.CustomersPayments.Add(this);
					this._CustomerID = value.CustomerID;
				}
				else
				{
					this._CustomerID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Customer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SalesMasters(SalesMaster entity)
	{
		this.SendPropertyChanging();
		entity.CustomersPayment = this;
	}
	
	private void detach_SalesMasters(SalesMaster entity)
	{
		this.SendPropertyChanging();
		entity.CustomersPayment = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseDiscardsMaster")]
public partial class PurchaseDiscardsMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PurchaseDiscardsID;
	
	private int _PurchaseID;
	
	private System.DateTime _PurchaseDiscardsDateM;
	
	private string _PurchaseDiscardsDateH;
	
	private string _Notes;
	
	private double _TotalReturn;
	
	private EntitySet<PurchaseDiscardsDetail> _PurchaseDiscardsDetails;
	
	private EntityRef<PurchasesMaster> _PurchasesMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseDiscardsIDChanging(int value);
    partial void OnPurchaseDiscardsIDChanged();
    partial void OnPurchaseIDChanging(int value);
    partial void OnPurchaseIDChanged();
    partial void OnPurchaseDiscardsDateMChanging(System.DateTime value);
    partial void OnPurchaseDiscardsDateMChanged();
    partial void OnPurchaseDiscardsDateHChanging(string value);
    partial void OnPurchaseDiscardsDateHChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnTotalReturnChanging(double value);
    partial void OnTotalReturnChanged();
    #endregion
	
	public PurchaseDiscardsMaster()
	{
		this._PurchaseDiscardsDetails = new EntitySet<PurchaseDiscardsDetail>(new Action<PurchaseDiscardsDetail>(this.attach_PurchaseDiscardsDetails), new Action<PurchaseDiscardsDetail>(this.detach_PurchaseDiscardsDetails));
		this._PurchasesMaster = default(EntityRef<PurchasesMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PurchaseDiscardsID
	{
		get
		{
			return this._PurchaseDiscardsID;
		}
		set
		{
			if ((this._PurchaseDiscardsID != value))
			{
				this.OnPurchaseDiscardsIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseDiscardsID = value;
				this.SendPropertyChanged("PurchaseDiscardsID");
				this.OnPurchaseDiscardsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int NOT NULL")]
	public int PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				if (this._PurchasesMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPurchaseIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseID = value;
				this.SendPropertyChanged("PurchaseID");
				this.OnPurchaseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsDateM", DbType="DateTime NOT NULL")]
	public System.DateTime PurchaseDiscardsDateM
	{
		get
		{
			return this._PurchaseDiscardsDateM;
		}
		set
		{
			if ((this._PurchaseDiscardsDateM != value))
			{
				this.OnPurchaseDiscardsDateMChanging(value);
				this.SendPropertyChanging();
				this._PurchaseDiscardsDateM = value;
				this.SendPropertyChanged("PurchaseDiscardsDateM");
				this.OnPurchaseDiscardsDateMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsDateH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string PurchaseDiscardsDateH
	{
		get
		{
			return this._PurchaseDiscardsDateH;
		}
		set
		{
			if ((this._PurchaseDiscardsDateH != value))
			{
				this.OnPurchaseDiscardsDateHChanging(value);
				this.SendPropertyChanging();
				this._PurchaseDiscardsDateH = value;
				this.SendPropertyChanged("PurchaseDiscardsDateH");
				this.OnPurchaseDiscardsDateHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalReturn", DbType="Float NOT NULL")]
	public double TotalReturn
	{
		get
		{
			return this._TotalReturn;
		}
		set
		{
			if ((this._TotalReturn != value))
			{
				this.OnTotalReturnChanging(value);
				this.SendPropertyChanging();
				this._TotalReturn = value;
				this.SendPropertyChanged("TotalReturn");
				this.OnTotalReturnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseDiscardsMaster_PurchaseDiscardsDetail", Storage="_PurchaseDiscardsDetails", ThisKey="PurchaseDiscardsID", OtherKey="PurchaseDiscardsID")]
	public EntitySet<PurchaseDiscardsDetail> PurchaseDiscardsDetails
	{
		get
		{
			return this._PurchaseDiscardsDetails;
		}
		set
		{
			this._PurchaseDiscardsDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchasesMaster_PurchaseDiscardsMaster", Storage="_PurchasesMaster", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
	public PurchasesMaster PurchasesMaster
	{
		get
		{
			return this._PurchasesMaster.Entity;
		}
		set
		{
			PurchasesMaster previousValue = this._PurchasesMaster.Entity;
			if (((previousValue != value) 
						|| (this._PurchasesMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PurchasesMaster.Entity = null;
					previousValue.PurchaseDiscardsMasters.Remove(this);
				}
				this._PurchasesMaster.Entity = value;
				if ((value != null))
				{
					value.PurchaseDiscardsMasters.Add(this);
					this._PurchaseID = value.PurchaseID;
				}
				else
				{
					this._PurchaseID = default(int);
				}
				this.SendPropertyChanged("PurchasesMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PurchaseDiscardsDetails(PurchaseDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.PurchaseDiscardsMaster = this;
	}
	
	private void detach_PurchaseDiscardsDetails(PurchaseDiscardsDetail entity)
	{
		this.SendPropertyChanging();
		entity.PurchaseDiscardsMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseDiscardsDetails")]
public partial class PurchaseDiscardsDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PurchaseDiscardsDetailID;
	
	private int _PurchaseDiscardsID;
	
	private int _ProductID;
	
	private double _PDQTY;
	
	private int _UnitID;
	
	private double _Quantity;
	
	private int _BasicUnitID;
	
	private double _PUnitPrice;
	
	private double _UnitPrice;
	
	private double _TotalPrice;
	
	private EntityRef<Product> _Product;
	
	private EntityRef<PurchaseDiscardsMaster> _PurchaseDiscardsMaster;
	
	private EntityRef<Unit> _Unit;
	
	private EntityRef<Unit> _Unit1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseDiscardsDetailIDChanging(int value);
    partial void OnPurchaseDiscardsDetailIDChanged();
    partial void OnPurchaseDiscardsIDChanging(int value);
    partial void OnPurchaseDiscardsIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnPDQTYChanging(double value);
    partial void OnPDQTYChanged();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnBasicUnitIDChanging(int value);
    partial void OnBasicUnitIDChanged();
    partial void OnPUnitPriceChanging(double value);
    partial void OnPUnitPriceChanged();
    partial void OnUnitPriceChanging(double value);
    partial void OnUnitPriceChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    #endregion
	
	public PurchaseDiscardsDetail()
	{
		this._Product = default(EntityRef<Product>);
		this._PurchaseDiscardsMaster = default(EntityRef<PurchaseDiscardsMaster>);
		this._Unit = default(EntityRef<Unit>);
		this._Unit1 = default(EntityRef<Unit>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PurchaseDiscardsDetailID
	{
		get
		{
			return this._PurchaseDiscardsDetailID;
		}
		set
		{
			if ((this._PurchaseDiscardsDetailID != value))
			{
				this.OnPurchaseDiscardsDetailIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseDiscardsDetailID = value;
				this.SendPropertyChanged("PurchaseDiscardsDetailID");
				this.OnPurchaseDiscardsDetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsID", DbType="Int NOT NULL")]
	public int PurchaseDiscardsID
	{
		get
		{
			return this._PurchaseDiscardsID;
		}
		set
		{
			if ((this._PurchaseDiscardsID != value))
			{
				if (this._PurchaseDiscardsMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPurchaseDiscardsIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseDiscardsID = value;
				this.SendPropertyChanged("PurchaseDiscardsID");
				this.OnPurchaseDiscardsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDQTY", DbType="Float NOT NULL")]
	public double PDQTY
	{
		get
		{
			return this._PDQTY;
		}
		set
		{
			if ((this._PDQTY != value))
			{
				this.OnPDQTYChanging(value);
				this.SendPropertyChanging();
				this._PDQTY = value;
				this.SendPropertyChanged("PDQTY");
				this.OnPDQTYChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int NOT NULL")]
	public int UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				if (this._Unit.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicUnitID", DbType="Int NOT NULL")]
	public int BasicUnitID
	{
		get
		{
			return this._BasicUnitID;
		}
		set
		{
			if ((this._BasicUnitID != value))
			{
				if (this._Unit1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBasicUnitIDChanging(value);
				this.SendPropertyChanging();
				this._BasicUnitID = value;
				this.SendPropertyChanged("BasicUnitID");
				this.OnBasicUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUnitPrice", DbType="Float NOT NULL")]
	public double PUnitPrice
	{
		get
		{
			return this._PUnitPrice;
		}
		set
		{
			if ((this._PUnitPrice != value))
			{
				this.OnPUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._PUnitPrice = value;
				this.SendPropertyChanged("PUnitPrice");
				this.OnPUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float NOT NULL")]
	public double UnitPrice
	{
		get
		{
			return this._UnitPrice;
		}
		set
		{
			if ((this._UnitPrice != value))
			{
				this.OnUnitPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitPrice = value;
				this.SendPropertyChanged("UnitPrice");
				this.OnUnitPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
	public double TotalPrice
	{
		get
		{
			return this._TotalPrice;
		}
		set
		{
			if ((this._TotalPrice != value))
			{
				this.OnTotalPriceChanging(value);
				this.SendPropertyChanging();
				this._TotalPrice = value;
				this.SendPropertyChanged("TotalPrice");
				this.OnTotalPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PurchaseDiscardsDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.PurchaseDiscardsDetails.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.PurchaseDiscardsDetails.Add(this);
					this._ProductID = value.ProductID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseDiscardsMaster_PurchaseDiscardsDetail", Storage="_PurchaseDiscardsMaster", ThisKey="PurchaseDiscardsID", OtherKey="PurchaseDiscardsID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public PurchaseDiscardsMaster PurchaseDiscardsMaster
	{
		get
		{
			return this._PurchaseDiscardsMaster.Entity;
		}
		set
		{
			PurchaseDiscardsMaster previousValue = this._PurchaseDiscardsMaster.Entity;
			if (((previousValue != value) 
						|| (this._PurchaseDiscardsMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PurchaseDiscardsMaster.Entity = null;
					previousValue.PurchaseDiscardsDetails.Remove(this);
				}
				this._PurchaseDiscardsMaster.Entity = value;
				if ((value != null))
				{
					value.PurchaseDiscardsDetails.Add(this);
					this._PurchaseDiscardsID = value.PurchaseDiscardsID;
				}
				else
				{
					this._PurchaseDiscardsID = default(int);
				}
				this.SendPropertyChanged("PurchaseDiscardsMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_PurchaseDiscardsDetail", Storage="_Unit", ThisKey="UnitID", OtherKey="UnitID", IsForeignKey=true)]
	public Unit Unit
	{
		get
		{
			return this._Unit.Entity;
		}
		set
		{
			Unit previousValue = this._Unit.Entity;
			if (((previousValue != value) 
						|| (this._Unit.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Unit.Entity = null;
					previousValue.PurchaseDiscardsDetails.Remove(this);
				}
				this._Unit.Entity = value;
				if ((value != null))
				{
					value.PurchaseDiscardsDetails.Add(this);
					this._UnitID = value.UnitID;
				}
				else
				{
					this._UnitID = default(int);
				}
				this.SendPropertyChanged("Unit");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_PurchaseDiscardsDetail1", Storage="_Unit1", ThisKey="BasicUnitID", OtherKey="UnitID", IsForeignKey=true)]
	public Unit Unit1
	{
		get
		{
			return this._Unit1.Entity;
		}
		set
		{
			Unit previousValue = this._Unit1.Entity;
			if (((previousValue != value) 
						|| (this._Unit1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Unit1.Entity = null;
					previousValue.PurchaseDiscardsDetails1.Remove(this);
				}
				this._Unit1.Entity = value;
				if ((value != null))
				{
					value.PurchaseDiscardsDetails1.Add(this);
					this._BasicUnitID = value.UnitID;
				}
				else
				{
					this._BasicUnitID = default(int);
				}
				this.SendPropertyChanged("Unit1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class spCategoriesResult
{
	
	private int _CategoryID;
	
	private string _CategoryName;
	
	private System.Nullable<int> _ParentCategoryID;
	
	private string _ParentCategoryName;
	
	public spCategoriesResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
	public int CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				this._CategoryID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string CategoryName
	{
		get
		{
			return this._CategoryName;
		}
		set
		{
			if ((this._CategoryName != value))
			{
				this._CategoryName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCategoryID", DbType="Int")]
	public System.Nullable<int> ParentCategoryID
	{
		get
		{
			return this._ParentCategoryID;
		}
		set
		{
			if ((this._ParentCategoryID != value))
			{
				this._ParentCategoryID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCategoryName", DbType="NVarChar(150)")]
	public string ParentCategoryName
	{
		get
		{
			return this._ParentCategoryName;
		}
		set
		{
			if ((this._ParentCategoryName != value))
			{
				this._ParentCategoryName = value;
			}
		}
	}
}

public partial class spEmployeesResult
{
	
	private int _EmployeeID;
	
	private string _EmployeeName;
	
	private System.Nullable<int> _JobID;
	
	private string _JobName;
	
	private string _Adress;
	
	private string _Telphone;
	
	private string _Mobile;
	
	private string _Email;
	
	public spEmployeesResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
	public int EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this._EmployeeID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string EmployeeName
	{
		get
		{
			return this._EmployeeName;
		}
		set
		{
			if ((this._EmployeeName != value))
			{
				this._EmployeeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int")]
	public System.Nullable<int> JobID
	{
		get
		{
			return this._JobID;
		}
		set
		{
			if ((this._JobID != value))
			{
				this._JobID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string JobName
	{
		get
		{
			return this._JobName;
		}
		set
		{
			if ((this._JobName != value))
			{
				this._JobName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(250)")]
	public string Adress
	{
		get
		{
			return this._Adress;
		}
		set
		{
			if ((this._Adress != value))
			{
				this._Adress = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telphone", DbType="NVarChar(50)")]
	public string Telphone
	{
		get
		{
			return this._Telphone;
		}
		set
		{
			if ((this._Telphone != value))
			{
				this._Telphone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this._Mobile = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(10)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
}

public partial class spCustomersPaymentsResult
{
	
	private int _CustomerPaymentID;
	
	private int _CustomerID;
	
	private string _CustomerName;
	
	private System.DateTime _PaymentDateM;
	
	private string _PaymentDateH;
	
	private double _Payment;
	
	public spCustomersPaymentsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPaymentID", DbType="Int NOT NULL")]
	public int CustomerPaymentID
	{
		get
		{
			return this._CustomerPaymentID;
		}
		set
		{
			if ((this._CustomerPaymentID != value))
			{
				this._CustomerPaymentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this._CustomerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this._CustomerName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDateM", DbType="DateTime NOT NULL")]
	public System.DateTime PaymentDateM
	{
		get
		{
			return this._PaymentDateM;
		}
		set
		{
			if ((this._PaymentDateM != value))
			{
				this._PaymentDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string PaymentDateH
	{
		get
		{
			return this._PaymentDateH;
		}
		set
		{
			if ((this._PaymentDateH != value))
			{
				this._PaymentDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Float NOT NULL")]
	public double Payment
	{
		get
		{
			return this._Payment;
		}
		set
		{
			if ((this._Payment != value))
			{
				this._Payment = value;
			}
		}
	}
}

public partial class spPaymentsForSuppliersResult
{
	
	private int _SupplierPaymentID;
	
	private int _SupplierID;
	
	private string _SupplierName;
	
	private System.DateTime _PaymentDateM;
	
	private string _PaymentDateH;
	
	private double _Payment;
	
	public spPaymentsForSuppliersResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPaymentID", DbType="Int NOT NULL")]
	public int SupplierPaymentID
	{
		get
		{
			return this._SupplierPaymentID;
		}
		set
		{
			if ((this._SupplierPaymentID != value))
			{
				this._SupplierPaymentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
	public int SupplierID
	{
		get
		{
			return this._SupplierID;
		}
		set
		{
			if ((this._SupplierID != value))
			{
				this._SupplierID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SupplierName
	{
		get
		{
			return this._SupplierName;
		}
		set
		{
			if ((this._SupplierName != value))
			{
				this._SupplierName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDateM", DbType="DateTime NOT NULL")]
	public System.DateTime PaymentDateM
	{
		get
		{
			return this._PaymentDateM;
		}
		set
		{
			if ((this._PaymentDateM != value))
			{
				this._PaymentDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string PaymentDateH
	{
		get
		{
			return this._PaymentDateH;
		}
		set
		{
			if ((this._PaymentDateH != value))
			{
				this._PaymentDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Float NOT NULL")]
	public double Payment
	{
		get
		{
			return this._Payment;
		}
		set
		{
			if ((this._Payment != value))
			{
				this._Payment = value;
			}
		}
	}
}

public partial class spPurchasesMasterResult
{
	
	private int _PurchaseID;
	
	private System.Nullable<System.DateTime> _PurchaseDateM;
	
	private string _PurchaseDateH;
	
	private int _SupplierID;
	
	private string _SupplierName;
	
	private System.Nullable<int> _EmployeeID;
	
	private string _EmployeeName;
	
	private bool _ISCash;
	
	private string _Notes;
	
	public spPurchasesMasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int NOT NULL")]
	public int PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				this._PurchaseID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateM", DbType="DateTime")]
	public System.Nullable<System.DateTime> PurchaseDateM
	{
		get
		{
			return this._PurchaseDateM;
		}
		set
		{
			if ((this._PurchaseDateM != value))
			{
				this._PurchaseDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateH", DbType="NVarChar(150)")]
	public string PurchaseDateH
	{
		get
		{
			return this._PurchaseDateH;
		}
		set
		{
			if ((this._PurchaseDateH != value))
			{
				this._PurchaseDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
	public int SupplierID
	{
		get
		{
			return this._SupplierID;
		}
		set
		{
			if ((this._SupplierID != value))
			{
				this._SupplierID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SupplierName
	{
		get
		{
			return this._SupplierName;
		}
		set
		{
			if ((this._SupplierName != value))
			{
				this._SupplierName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
	public System.Nullable<int> EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this._EmployeeID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(150)")]
	public string EmployeeName
	{
		get
		{
			return this._EmployeeName;
		}
		set
		{
			if ((this._EmployeeName != value))
			{
				this._EmployeeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISCash", DbType="Bit NOT NULL")]
	public bool ISCash
	{
		get
		{
			return this._ISCash;
		}
		set
		{
			if ((this._ISCash != value))
			{
				this._ISCash = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this._Notes = value;
			}
		}
	}
}

public partial class spPurchasesDetailsResult
{
	
	private int _PurchasesDetailID;
	
	private int _PurchaseID;
	
	private System.Nullable<System.DateTime> _PurchaseDateM;
	
	private string _PurchaseDateH;
	
	private bool _ISCash;
	
	private string _Notes;
	
	private int _SupplierID;
	
	private string _SupplierName;
	
	private System.Nullable<int> _EmployeeID;
	
	private string _EmployeeName;
	
	private int _ProductID;
	
	private string _ProductName;
	
	private System.Nullable<int> _CategoryID;
	
	private string _CategoryName;
	
	private double _Quantity;
	
	private double _Price;
	
	public spPurchasesDetailsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasesDetailID", DbType="Int NOT NULL")]
	public int PurchasesDetailID
	{
		get
		{
			return this._PurchasesDetailID;
		}
		set
		{
			if ((this._PurchasesDetailID != value))
			{
				this._PurchasesDetailID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int NOT NULL")]
	public int PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				this._PurchaseID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateM", DbType="DateTime")]
	public System.Nullable<System.DateTime> PurchaseDateM
	{
		get
		{
			return this._PurchaseDateM;
		}
		set
		{
			if ((this._PurchaseDateM != value))
			{
				this._PurchaseDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateH", DbType="NVarChar(150)")]
	public string PurchaseDateH
	{
		get
		{
			return this._PurchaseDateH;
		}
		set
		{
			if ((this._PurchaseDateH != value))
			{
				this._PurchaseDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISCash", DbType="Bit NOT NULL")]
	public bool ISCash
	{
		get
		{
			return this._ISCash;
		}
		set
		{
			if ((this._ISCash != value))
			{
				this._ISCash = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this._Notes = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
	public int SupplierID
	{
		get
		{
			return this._SupplierID;
		}
		set
		{
			if ((this._SupplierID != value))
			{
				this._SupplierID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SupplierName
	{
		get
		{
			return this._SupplierName;
		}
		set
		{
			if ((this._SupplierName != value))
			{
				this._SupplierName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
	public System.Nullable<int> EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this._EmployeeID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(150)")]
	public string EmployeeName
	{
		get
		{
			return this._EmployeeName;
		}
		set
		{
			if ((this._EmployeeName != value))
			{
				this._EmployeeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this._ProductID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string ProductName
	{
		get
		{
			return this._ProductName;
		}
		set
		{
			if ((this._ProductName != value))
			{
				this._ProductName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
	public System.Nullable<int> CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				this._CategoryID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(150)")]
	public string CategoryName
	{
		get
		{
			return this._CategoryName;
		}
		set
		{
			if ((this._CategoryName != value))
			{
				this._CategoryName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
	public double Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
}

public partial class spSalesDetailsResult
{
	
	private int _SalesDetailID;
	
	private int _SalesID;
	
	private System.DateTime _SalesDateM;
	
	private string _SalesDateH;
	
	private bool _ISCash;
	
	private string _Notes;
	
	private int _CustomerID;
	
	private string _CustomerName;
	
	private System.Nullable<int> _EmployeeID;
	
	private string _EmployeeName;
	
	private int _ProductID;
	
	private string _ProductName;
	
	private System.Nullable<int> _CategoryID;
	
	private string _CategoryName;
	
	private double _Quantity;
	
	private double _Price;
	
	public spSalesDetailsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDetailID", DbType="Int NOT NULL")]
	public int SalesDetailID
	{
		get
		{
			return this._SalesDetailID;
		}
		set
		{
			if ((this._SalesDetailID != value))
			{
				this._SalesDetailID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesID", DbType="Int NOT NULL")]
	public int SalesID
	{
		get
		{
			return this._SalesID;
		}
		set
		{
			if ((this._SalesID != value))
			{
				this._SalesID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateM", DbType="DateTime NOT NULL")]
	public System.DateTime SalesDateM
	{
		get
		{
			return this._SalesDateM;
		}
		set
		{
			if ((this._SalesDateM != value))
			{
				this._SalesDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SalesDateH
	{
		get
		{
			return this._SalesDateH;
		}
		set
		{
			if ((this._SalesDateH != value))
			{
				this._SalesDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISCash", DbType="Bit NOT NULL")]
	public bool ISCash
	{
		get
		{
			return this._ISCash;
		}
		set
		{
			if ((this._ISCash != value))
			{
				this._ISCash = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this._Notes = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this._CustomerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this._CustomerName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
	public System.Nullable<int> EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this._EmployeeID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(150)")]
	public string EmployeeName
	{
		get
		{
			return this._EmployeeName;
		}
		set
		{
			if ((this._EmployeeName != value))
			{
				this._EmployeeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this._ProductID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string ProductName
	{
		get
		{
			return this._ProductName;
		}
		set
		{
			if ((this._ProductName != value))
			{
				this._ProductName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
	public System.Nullable<int> CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				this._CategoryID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(150)")]
	public string CategoryName
	{
		get
		{
			return this._CategoryName;
		}
		set
		{
			if ((this._CategoryName != value))
			{
				this._CategoryName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
	public double Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
}

public partial class spPurchaseDiscardsDetailsResult
{
	
	private int _PurchaseDiscardsDetailID;
	
	private int _PurchaseDiscardsID;
	
	private System.DateTime _PurchaseDiscardsDateM;
	
	private string _PurchaseDiscardsDateH;
	
	private bool _IsCash;
	
	private string _Notes;
	
	private int _PurchaseID;
	
	private System.Nullable<System.DateTime> _PurchaseDateM;
	
	private string _PurchaseDateH;
	
	private int _SupplierID;
	
	private string _SupplierName;
	
	private int _ProductID;
	
	private string _ProductName;
	
	private double _Quantity;
	
	private double _Price;
	
	public spPurchaseDiscardsDetailsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsDetailID", DbType="Int NOT NULL")]
	public int PurchaseDiscardsDetailID
	{
		get
		{
			return this._PurchaseDiscardsDetailID;
		}
		set
		{
			if ((this._PurchaseDiscardsDetailID != value))
			{
				this._PurchaseDiscardsDetailID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsID", DbType="Int NOT NULL")]
	public int PurchaseDiscardsID
	{
		get
		{
			return this._PurchaseDiscardsID;
		}
		set
		{
			if ((this._PurchaseDiscardsID != value))
			{
				this._PurchaseDiscardsID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsDateM", DbType="DateTime NOT NULL")]
	public System.DateTime PurchaseDiscardsDateM
	{
		get
		{
			return this._PurchaseDiscardsDateM;
		}
		set
		{
			if ((this._PurchaseDiscardsDateM != value))
			{
				this._PurchaseDiscardsDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsDateH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string PurchaseDiscardsDateH
	{
		get
		{
			return this._PurchaseDiscardsDateH;
		}
		set
		{
			if ((this._PurchaseDiscardsDateH != value))
			{
				this._PurchaseDiscardsDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCash", DbType="Bit NOT NULL")]
	public bool IsCash
	{
		get
		{
			return this._IsCash;
		}
		set
		{
			if ((this._IsCash != value))
			{
				this._IsCash = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this._Notes = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int NOT NULL")]
	public int PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				this._PurchaseID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateM", DbType="DateTime")]
	public System.Nullable<System.DateTime> PurchaseDateM
	{
		get
		{
			return this._PurchaseDateM;
		}
		set
		{
			if ((this._PurchaseDateM != value))
			{
				this._PurchaseDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateH", DbType="NVarChar(150)")]
	public string PurchaseDateH
	{
		get
		{
			return this._PurchaseDateH;
		}
		set
		{
			if ((this._PurchaseDateH != value))
			{
				this._PurchaseDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
	public int SupplierID
	{
		get
		{
			return this._SupplierID;
		}
		set
		{
			if ((this._SupplierID != value))
			{
				this._SupplierID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SupplierName
	{
		get
		{
			return this._SupplierName;
		}
		set
		{
			if ((this._SupplierName != value))
			{
				this._SupplierName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this._ProductID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string ProductName
	{
		get
		{
			return this._ProductName;
		}
		set
		{
			if ((this._ProductName != value))
			{
				this._ProductName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
	public double Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
}

public partial class spSalesDiscardsDetailsResult
{
	
	private int _SalesDiscardsDetailID;
	
	private int _SalesDiscardsID;
	
	private System.DateTime _SalesDiscardsDateM;
	
	private string _SalesDiscardsDateH;
	
	private int _SalesID;
	
	private System.DateTime _SalesDateM;
	
	private string _SalesDateH;
	
	private int _CustomerID;
	
	private string _CustomerName;
	
	private int _ProductID;
	
	private string _ProductName;
	
	private double _Quantity;
	
	private double _Price;
	
	public spSalesDiscardsDetailsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsDetailID", DbType="Int NOT NULL")]
	public int SalesDiscardsDetailID
	{
		get
		{
			return this._SalesDiscardsDetailID;
		}
		set
		{
			if ((this._SalesDiscardsDetailID != value))
			{
				this._SalesDiscardsDetailID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsID", DbType="Int NOT NULL")]
	public int SalesDiscardsID
	{
		get
		{
			return this._SalesDiscardsID;
		}
		set
		{
			if ((this._SalesDiscardsID != value))
			{
				this._SalesDiscardsID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsDateM", DbType="DateTime NOT NULL")]
	public System.DateTime SalesDiscardsDateM
	{
		get
		{
			return this._SalesDiscardsDateM;
		}
		set
		{
			if ((this._SalesDiscardsDateM != value))
			{
				this._SalesDiscardsDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsDateH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SalesDiscardsDateH
	{
		get
		{
			return this._SalesDiscardsDateH;
		}
		set
		{
			if ((this._SalesDiscardsDateH != value))
			{
				this._SalesDiscardsDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesID", DbType="Int NOT NULL")]
	public int SalesID
	{
		get
		{
			return this._SalesID;
		}
		set
		{
			if ((this._SalesID != value))
			{
				this._SalesID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateM", DbType="DateTime NOT NULL")]
	public System.DateTime SalesDateM
	{
		get
		{
			return this._SalesDateM;
		}
		set
		{
			if ((this._SalesDateM != value))
			{
				this._SalesDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SalesDateH
	{
		get
		{
			return this._SalesDateH;
		}
		set
		{
			if ((this._SalesDateH != value))
			{
				this._SalesDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this._CustomerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this._CustomerName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this._ProductID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string ProductName
	{
		get
		{
			return this._ProductName;
		}
		set
		{
			if ((this._ProductName != value))
			{
				this._ProductName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
	public double Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
}

public partial class spSalesDiscardsMasterResult
{
	
	private int _SalesDiscardsID;
	
	private System.DateTime _SalesDiscardsDateM;
	
	private string _SalesDiscardsDateH;
	
	private int _SalesID;
	
	private System.DateTime _SalesDateM;
	
	private string _SalesDateH;
	
	private int _CustomerID;
	
	private string _CustomerName;
	
	private bool _IsCash;
	
	private string _Notes;
	
	public spSalesDiscardsMasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsID", DbType="Int NOT NULL")]
	public int SalesDiscardsID
	{
		get
		{
			return this._SalesDiscardsID;
		}
		set
		{
			if ((this._SalesDiscardsID != value))
			{
				this._SalesDiscardsID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsDateM", DbType="DateTime NOT NULL")]
	public System.DateTime SalesDiscardsDateM
	{
		get
		{
			return this._SalesDiscardsDateM;
		}
		set
		{
			if ((this._SalesDiscardsDateM != value))
			{
				this._SalesDiscardsDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDiscardsDateH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SalesDiscardsDateH
	{
		get
		{
			return this._SalesDiscardsDateH;
		}
		set
		{
			if ((this._SalesDiscardsDateH != value))
			{
				this._SalesDiscardsDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesID", DbType="Int NOT NULL")]
	public int SalesID
	{
		get
		{
			return this._SalesID;
		}
		set
		{
			if ((this._SalesID != value))
			{
				this._SalesID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateM", DbType="DateTime NOT NULL")]
	public System.DateTime SalesDateM
	{
		get
		{
			return this._SalesDateM;
		}
		set
		{
			if ((this._SalesDateM != value))
			{
				this._SalesDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SalesDateH
	{
		get
		{
			return this._SalesDateH;
		}
		set
		{
			if ((this._SalesDateH != value))
			{
				this._SalesDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this._CustomerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this._CustomerName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCash", DbType="Bit NOT NULL")]
	public bool IsCash
	{
		get
		{
			return this._IsCash;
		}
		set
		{
			if ((this._IsCash != value))
			{
				this._IsCash = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this._Notes = value;
			}
		}
	}
}

public partial class spProductsResult
{
	
	private int _ProductID;
	
	private string _ProductName;
	
	private System.Nullable<double> _Price;
	
	private System.Nullable<int> _CategoryID;
	
	private string _CategoryName;
	
	private string _Description;
	
	private double _SQty;
	
	private int _UnitID;
	
	private string _UnitName_En;
	
	private string _UnitName_Ar;
	
	private double _StartQuantity;
	
	private double _Quantity;
	
	private int _BasicUnitID;
	
	private string _BasicUnitName_En;
	
	private string _BasicUnitName_Ar;
	
	public spProductsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this._ProductID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string ProductName
	{
		get
		{
			return this._ProductName;
		}
		set
		{
			if ((this._ProductName != value))
			{
				this._ProductName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
	public System.Nullable<double> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
	public System.Nullable<int> CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				this._CategoryID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(150)")]
	public string CategoryName
	{
		get
		{
			return this._CategoryName;
		}
		set
		{
			if ((this._CategoryName != value))
			{
				this._CategoryName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SQty", DbType="Float NOT NULL")]
	public double SQty
	{
		get
		{
			return this._SQty;
		}
		set
		{
			if ((this._SQty != value))
			{
				this._SQty = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int NOT NULL")]
	public int UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				this._UnitID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName_En", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UnitName_En
	{
		get
		{
			return this._UnitName_En;
		}
		set
		{
			if ((this._UnitName_En != value))
			{
				this._UnitName_En = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName_Ar", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UnitName_Ar
	{
		get
		{
			return this._UnitName_Ar;
		}
		set
		{
			if ((this._UnitName_Ar != value))
			{
				this._UnitName_Ar = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartQuantity", DbType="Float NOT NULL")]
	public double StartQuantity
	{
		get
		{
			return this._StartQuantity;
		}
		set
		{
			if ((this._StartQuantity != value))
			{
				this._StartQuantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicUnitID", DbType="Int NOT NULL")]
	public int BasicUnitID
	{
		get
		{
			return this._BasicUnitID;
		}
		set
		{
			if ((this._BasicUnitID != value))
			{
				this._BasicUnitID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicUnitName_En", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string BasicUnitName_En
	{
		get
		{
			return this._BasicUnitName_En;
		}
		set
		{
			if ((this._BasicUnitName_En != value))
			{
				this._BasicUnitName_En = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicUnitName_Ar", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string BasicUnitName_Ar
	{
		get
		{
			return this._BasicUnitName_Ar;
		}
		set
		{
			if ((this._BasicUnitName_Ar != value))
			{
				this._BasicUnitName_Ar = value;
			}
		}
	}
}

public partial class spSalesMasterResult
{
	
	private int _SalesID;
	
	private System.DateTime _SalesDateM;
	
	private string _SalesDateH;
	
	private System.Nullable<int> _CustomerID;
	
	private string _CustomerName;
	
	private System.Nullable<int> _EmployeeID;
	
	private string _EmployeeName;
	
	private bool _ISCash;
	
	private string _Notes;
	
	public spSalesMasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesID", DbType="Int NOT NULL")]
	public int SalesID
	{
		get
		{
			return this._SalesID;
		}
		set
		{
			if ((this._SalesID != value))
			{
				this._SalesID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateM", DbType="DateTime NOT NULL")]
	public System.DateTime SalesDateM
	{
		get
		{
			return this._SalesDateM;
		}
		set
		{
			if ((this._SalesDateM != value))
			{
				this._SalesDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDateH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SalesDateH
	{
		get
		{
			return this._SalesDateH;
		}
		set
		{
			if ((this._SalesDateH != value))
			{
				this._SalesDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
	public System.Nullable<int> CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this._CustomerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(150)")]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this._CustomerName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
	public System.Nullable<int> EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this._EmployeeID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(150)")]
	public string EmployeeName
	{
		get
		{
			return this._EmployeeName;
		}
		set
		{
			if ((this._EmployeeName != value))
			{
				this._EmployeeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISCash", DbType="Bit NOT NULL")]
	public bool ISCash
	{
		get
		{
			return this._ISCash;
		}
		set
		{
			if ((this._ISCash != value))
			{
				this._ISCash = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this._Notes = value;
			}
		}
	}
}

public partial class spPurchaseDiscardsMasterResult
{
	
	private int _PurchaseDiscardsID;
	
	private System.DateTime _PurchaseDiscardsDateM;
	
	private string _PurchaseDiscardsDateH;
	
	private int _PurchaseID;
	
	private System.Nullable<System.DateTime> _PurchaseDateM;
	
	private string _PurchaseDateH;
	
	private int _SupplierID;
	
	private string _SupplierName;
	
	private string _Notes;
	
	private double _TotalReturn;
	
	public spPurchaseDiscardsMasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsID", DbType="Int NOT NULL")]
	public int PurchaseDiscardsID
	{
		get
		{
			return this._PurchaseDiscardsID;
		}
		set
		{
			if ((this._PurchaseDiscardsID != value))
			{
				this._PurchaseDiscardsID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsDateM", DbType="DateTime NOT NULL")]
	public System.DateTime PurchaseDiscardsDateM
	{
		get
		{
			return this._PurchaseDiscardsDateM;
		}
		set
		{
			if ((this._PurchaseDiscardsDateM != value))
			{
				this._PurchaseDiscardsDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDiscardsDateH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string PurchaseDiscardsDateH
	{
		get
		{
			return this._PurchaseDiscardsDateH;
		}
		set
		{
			if ((this._PurchaseDiscardsDateH != value))
			{
				this._PurchaseDiscardsDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int NOT NULL")]
	public int PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				this._PurchaseID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateM", DbType="DateTime")]
	public System.Nullable<System.DateTime> PurchaseDateM
	{
		get
		{
			return this._PurchaseDateM;
		}
		set
		{
			if ((this._PurchaseDateM != value))
			{
				this._PurchaseDateM = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDateH", DbType="NVarChar(150)")]
	public string PurchaseDateH
	{
		get
		{
			return this._PurchaseDateH;
		}
		set
		{
			if ((this._PurchaseDateH != value))
			{
				this._PurchaseDateH = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
	public int SupplierID
	{
		get
		{
			return this._SupplierID;
		}
		set
		{
			if ((this._SupplierID != value))
			{
				this._SupplierID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SupplierName
	{
		get
		{
			return this._SupplierName;
		}
		set
		{
			if ((this._SupplierName != value))
			{
				this._SupplierName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this._Notes = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalReturn", DbType="Float NOT NULL")]
	public double TotalReturn
	{
		get
		{
			return this._TotalReturn;
		}
		set
		{
			if ((this._TotalReturn != value))
			{
				this._TotalReturn = value;
			}
		}
	}
}
#pragma warning restore 1591
